"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[40175],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>_});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function u(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=r.createContext({}),i=function(e){var a=r.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},c=function(e){var a=i(e.components);return r.createElement(o.Provider,{value:a},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},p=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=i(t),p=n,_=m["".concat(o,".").concat(p)]||m[p]||d[p]||s;return t?r.createElement(_,l(l({ref:a},c),{},{components:t})):r.createElement(_,l({ref:a},c))}));function _(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var s=t.length,l=new Array(s);l[0]=p;var u={};for(var o in a)hasOwnProperty.call(a,o)&&(u[o]=a[o]);u.originalType=e,u[m]="string"==typeof e?e:n,l[1]=u;for(var i=2;i<s;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},85162:(e,a,t)=>{t.d(a,{Z:()=>l});var r=t(67294),n=t(86010);const s={tabItem:"tabItem_Ymn6"};function l(e){let{children:a,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(s.tabItem,l),hidden:t},a)}},74866:(e,a,t)=>{t.d(a,{Z:()=>v});var r=t(87462),n=t(67294),s=t(86010),l=t(12466),u=t(16550),o=t(91980),i=t(67392),c=t(50012);function m(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:a,label:t,attributes:r,default:n}}=e;return{value:a,label:t,attributes:r,default:n}}))}function d(e){const{values:a,children:t}=e;return(0,n.useMemo)((()=>{const e=a??m(t);return function(e){const a=(0,i.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function p(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function _(e){let{queryString:a=!1,groupId:t}=e;const r=(0,u.k6)(),s=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,o._X)(s),(0,n.useCallback)((e=>{if(!s)return;const a=new URLSearchParams(r.location.search);a.set(s,e),r.replace({...r.location,search:a.toString()})}),[s,r])]}function f(e){const{defaultValue:a,queryString:t=!1,groupId:r}=e,s=d(e),[l,u]=(0,n.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!p({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:a,tabValues:s}))),[o,i]=_({queryString:t,groupId:r}),[m,f]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[r,s]=(0,c.Nk)(t);return[r,(0,n.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),b=(()=>{const e=o??m;return p({value:e,tabValues:s})?e:null})();(0,n.useLayoutEffect)((()=>{b&&u(b)}),[b]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);u(e),i(e),f(e)}),[i,f,s]),tabValues:s}}var b=t(72389);const E={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:a,block:t,selectedValue:u,selectValue:o,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),d=e=>{const a=e.currentTarget,t=c.indexOf(a),r=i[t].value;r!==u&&(m(a),o(r))},p=e=>{let a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;a=c[t]??c[c.length-1];break}}a?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},a)},i.map((e=>{let{value:a,label:t,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:u===a?0:-1,"aria-selected":u===a,key:a,ref:e=>c.push(e),onKeyDown:p,onClick:d},l,{className:(0,s.Z)("tabs__item",E.tabItem,l?.className,{"tabs__item--active":u===a})}),t??a)})))}function h(e){let{lazy:a,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=s.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},s.map(((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==r}))))}function w(e){const a=f(e);return n.createElement("div",{className:(0,s.Z)("tabs-container",E.tabList)},n.createElement(y,(0,r.Z)({},e,a)),n.createElement(h,(0,r.Z)({},e,a)))}function v(e){const a=(0,b.Z)();return n.createElement(w,(0,r.Z)({key:String(a)},e))}},60519:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>_,frontMatter:()=>u,metadata:()=>i,toc:()=>m});var r=t(87462),n=(t(67294),t(3905)),s=t(74866),l=t(85162);const u={id:"aws_iam",title:"aws_iam",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},o=void 0,i={unversionedId:"modules/aws/aws_iam",id:"version-0.1.9/modules/aws/aws_iam",title:"aws_iam",description:"Tables",source:"@site/versioned_docs/version-0.1.9/modules/aws/aws_iam.md",sourceDirName:"modules/aws",slug:"/modules/aws/aws_iam",permalink:"/docs/modules/aws/aws_iam",draft:!1,editUrl:null,tags:[],version:"0.1.9",frontMatter:{id:"aws_iam",title:"aws_iam",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"aws_elb",permalink:"/docs/modules/aws/aws_elb"},next:{title:"aws_lambda",permalink:"/docs/modules/aws/aws_lambda"}},c={},m=[{value:"Tables",id:"tables",level:3},{value:"Functions",id:"functions",level:3},{value:"Enums",id:"enums",level:3}],d={toc:m},p="wrapper";function _(e){let{components:a,...t}=e;return(0,n.kt)(p,(0,r.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)(s.Z,{queryString:"view",mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"components",label:"Components",default:!0,mdxType:"TabItem"},(0,n.kt)("h3",{id:"tables"},"Tables"),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/tables/aws_iam_entity_access_key.AccessKey"},"access_key")),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/tables/aws_iam_entity_role.IamRole"},"iam_role")),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/tables/aws_iam_entity_user.IamUser"},"iam_user")),(0,n.kt)("h3",{id:"functions"},"Functions"),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/tables/aws_iam_rpcs_request.AccessKeyRequestRpc"},"access_key_request")),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/tables/aws_iam_rpcs_set_password.SetUserPasswordRequestRpc"},"set_user_password_request")),(0,n.kt)("h3",{id:"enums"},"Enums"),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/enums/aws_iam_entity_access_key.accessKeyStatusEnum"},"access_key_status"))),(0,n.kt)(l.Z,{value:"code-examples",label:"Code examples",mdxType:"TabItem"},(0,n.kt)("p",null,(0,n.kt)("details",{open:"true"},(0,n.kt)("summary",{mdxType:"summary"},"Manage Roles"),(0,n.kt)("codeblock",{language:"sql"},"--- installs the iam module\nSELECT * FROM iasql_install('<modules>');\n--- adds a new role\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<taskRoleName>', '<attachAssumeTaskPolicy>', array['<taskPolicyArn>']);\n--- check a new role addition\nSELECT *\nFROM iam_role\nWHERE role_name = '<principalServArr>';\n--- tries to update a role description\nUPDATE iam_role SET description = 'description' WHERE role_name = '<taskRoleName>';\n--- tries to update ec2 policy field\nUPDATE iam_role SET assume_role_policy_document = '<attachAssumeLambdaPolicy>' WHERE role_name = '<ec2RoleName>';\n--- tries to restore ec2 policy field\nUPDATE iam_role SET assume_role_policy_document = '<attachAssumeEc2Policy>' WHERE role_name = '<ec2RoleName>';\n--- tries to update role attached policies\nUPDATE iam_role SET attached_policies_arns=array['<servicePolicyArn>'] WHERE role_name = '<taskRoleName>';\n--- deletes the role\nDELETE FROM iam_role\nWHERE role_name = '<taskRoleName>';\n")),(0,n.kt)("details",{open:"true"},(0,n.kt)("summary",{mdxType:"summary"},"Manage Users"),(0,n.kt)("codeblock",{language:"sql"},"--- installs the iam module\nSELECT * FROM iasql_install('<modules>');\n--- adds a new user\nINSERT INTO iam_user (user_name, path)\nVALUES ('<userName>', '<userPath>');\n--- check a new user addition\nSELECT *\nFROM iam_user\nWHERE user_name = '<userName>';\n--- generates an user password\nSELECT *\nFROM set_user_password('<userName>', 'P4ssP4ss', 'true');\n--- updates an user password\nSELECT *\nFROM set_user_password('<userName>', 'P4ssp4ss', 'false');\n--- deletes an user password\nSELECT *\nFROM set_user_password('<userName>', '');\n--- updates user path\nUPDATE iam_user SET path = '<userNewPath>' WHERE user_name = '<userName>';\n--- check that path has been modified\nSELECT *\nFROM iam_user\nWHERE user_name = '<userName>' AND path = '<userNewPath>';\n--- tries to update user attached policies\nUPDATE iam_user SET attached_policies_arns=array['<supportUserPolicyArn>'] WHERE user_name = '<userName>';\n--- generates a new access key\nSELECT *\nFROM access_key_request('<userName>');\n--- check new access key added\nSELECT *\nFROM access_key\nWHERE user_name = '<userName>' AND status='Active';\n--- updates access key status\nUPDATE access_key SET status='Inactive'\nWHERE user_name = '<userName>';\n--- check access key updated\nSELECT *\nFROM access_key\nWHERE user_name = '<userName>' AND status='Inactive';\n--- deletes the access key\nDELETE FROM access_key\nWHERE user_name = '<userName>';\n--- tries to delete an aws user\nDELETE FROM iam_user WHERE user_name = '<userName>';\n"))))))}_.isMDXComponent=!0}}]);