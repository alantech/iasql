"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[92719],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>y});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,y=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return t?r.createElement(y,l(l({ref:n},u),{},{components:t})):r.createElement(y,l({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(67294),a=t(86010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,l),hidden:t},n)}},74866:(e,n,t)=>{t.d(n,{Z:()=>T});var r=t(87462),a=t(67294),o=t(86010),l=t(12466),i=t(16550),c=t(91980),s=t(67392),u=t(50012);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??p(t);return function(e){const n=(0,s.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function y(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(o),(0,a.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function _(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=d(e),[l,i]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[c,s]=y({queryString:t,groupId:r}),[p,_]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,u.Nk)(t);return[r,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),f=(()=>{const e=c??p;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),_(e)}),[s,_,o]),tabValues:o}}var f=t(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function E(e){let{className:n,block:t,selectedValue:i,selectValue:c,tabValues:s}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=e=>{const n=e.currentTarget,t=u.indexOf(n),r=s[t].value;r!==i&&(p(n),c(r))},m=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},s.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>u.push(e),onKeyDown:m,onClick:d},l,{className:(0,o.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":i===n})}),t??n)})))}function g(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function v(e){const n=_(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},a.createElement(E,(0,r.Z)({},e,n)),a.createElement(g,(0,r.Z)({},e,n)))}function T(e){const n=(0,f.Z)();return a.createElement(v,(0,r.Z)({key:String(n)},e))}},10680:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>y,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(87462),a=(t(67294),t(3905)),o=t(74866),l=t(85162);const i={id:"aws_codepipeline",title:"aws_codepipeline",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},c=void 0,s={unversionedId:"modules/aws/aws_codepipeline",id:"version-0.1.9/modules/aws/aws_codepipeline",title:"aws_codepipeline",description:"Tables",source:"@site/versioned_docs/version-0.1.9/modules/aws/aws_codepipeline.md",sourceDirName:"modules/aws",slug:"/modules/aws/aws_codepipeline",permalink:"/docs/modules/aws/aws_codepipeline",draft:!1,editUrl:null,tags:[],version:"0.1.9",frontMatter:{id:"aws_codepipeline",title:"aws_codepipeline",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"aws_codedeploy",permalink:"/docs/modules/aws/aws_codedeploy"},next:{title:"aws_dynamo",permalink:"/docs/modules/aws/aws_dynamo"}},u={},p=[{value:"Tables",id:"tables",level:3},{value:"Enums",id:"enums",level:3}],d={toc:p},m="wrapper";function y(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(o.Z,{queryString:"view",mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"components",label:"Components",default:!0,mdxType:"TabItem"},(0,a.kt)("h3",{id:"tables"},"Tables"),(0,a.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,a.kt)("a",{parentName:"p",href:"../../aws/tables/aws_codepipeline_entity_pipeline_declaration.PipelineDeclaration"},"pipeline_declaration")),(0,a.kt)("h3",{id:"enums"},"Enums"),(0,a.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,a.kt)("a",{parentName:"p",href:"../../aws/enums/aws_codepipeline_entity_pipeline_declaration.ActionCategory"},"action_category"))),(0,a.kt)(l.Z,{value:"code-examples",label:"Code examples",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("details",{open:"true"},(0,a.kt)("summary",{mdxType:"summary"},"Manage Codepipeline"),(0,a.kt)("codeblock",{language:"sql"},"--- installs the codepipeline module\nSELECT * FROM iasql_install('<modules>');\n--- adds a new role\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<codePipelineRoleName>', '<assumeServicePolicy>', array['<codepipelinePolicyArn>', '<s3PolicyArn>', '<codedeployPolicyArn>', '<globalIamPolicyArn>', '<cloudformationPolicyArn>']);\n--- adds a new role for lambda pipeline\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<codePipelineCfRoleName>', '<assumeServicePolicy>', array['<codepipelinePolicyArn>', '<s3PolicyArn>', '<codecommitPolicyArn>', '<codedeployPolicyArn>', '<globalIamPolicyArn>', '<cloudformationPolicyArn>']);\n--- adds a new role for cloudformation\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<cloudformationRoleName>', '<cloudformationRolePolicy>', array['<codedeployPolicyArn>', '<globalIamPolicyArn>', '<cloudformationPolicyArn>']);\n--- adds a new ec2 role\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<ec2RoleName>', '<ec2RolePolicy>', array['<deployEC2PolicyArn>', '<ssmPolicyArn>', '<codedeployPolicyArn>', '<s3PolicyArn>']);\n--- adds a new codedeploy role\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<codeDeployRoleName>', '<codedeployRolePolicy>', array['<codedeployPolicyArn>', '<deployEC2PolicyArn>', '<s3PolicyArn>']);\n--- add storage s3 endpoint\nINSERT INTO bucket (name) VALUES ('<bucket>');\n--- add storage s3 endpoint for lambda\nINSERT INTO bucket (name) VALUES ('<testLambdaBucketName>');\n--- adds a new pipeline\nINSERT INTO pipeline_declaration (name, service_role_name, stages, artifact_store)\nSELECT '<prefix>-lambda-<dbAlias>', '<codePipelineCfRoleName>',\nCAST(REPLACE('<lambdaStages>', '##ROLE_ARN##', arn) AS json), '<artifactStore>' FROM iam_role WHERE role_name='<cloudformationRoleName>';\n--- check pipeline is created\nSELECT * FROM pipeline_declaration\nWHERE name = '<prefix>-lambda-<dbAlias>';\n--- adds a new security group\nINSERT INTO security_group (description, group_name)\nVALUES ('CodedeploySecurity Group', '<sgGroupName>');\n--- adds security group rules\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT false, 'tcp', 22, 22, '0.0.0.0/0', '<prefix>codedeploy_rule_ssh', id\nFROM security_group\nWHERE group_name = '<sgGroupName>';\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT false, 'tcp', 80, 80, '0.0.0.0/0', '<prefix>codedeploy_rule_http', id\nFROM security_group\nWHERE group_name = '<sgGroupName>';\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT true, 'tcp', 1, 65335, '0.0.0.0/0', '<prefix>codedeploy_rule_egress', id\nFROM security_group\nWHERE group_name = '<sgGroupName>';\n--- adds a new codedeploy_application for deployment\nINSERT INTO codedeploy_application (name, compute_platform)\nVALUES ('<applicationNameForDeployment>', 'Server');\n--- adds a new deployment_group\nINSERT INTO codedeploy_deployment_group (application_id, name, role_name, ec2_tag_filters)\nVALUES ((SELECT id FROM codedeploy_application WHERE name = '<applicationNameForDeployment>'), '<deploymentGroupName>', '<codeDeployRoleName>', '<ec2FilterTags>');\n--- adds a new pipeline\nINSERT INTO pipeline_declaration (name, service_role_name, stages, artifact_store)\nVALUES ('<prefix>-<dbAlias>', '<codePipelineRoleName>', '<stages>', '<artifactStore>');\n--- check pipeline is created\nSELECT * FROM pipeline_declaration\nWHERE name = '<prefix>-<dbAlias>';\n--- delete pipeline\nDELETE FROM pipeline_declaration\nWHERE name IN ('<prefix>-<dbAlias>', '<prefix>-buggy-<dbAlias>', '<prefix>-lambda-<dbAlias>');\n--- delete deployment group\nDELETE FROM codedeploy_deployment_group\nWHERE name = '<deploymentGroupName>';\n--- delete application\nDELETE FROM codedeploy_application\nWHERE name = '<applicationNameForDeployment>';\n"))))))}y.isMDXComponent=!0}}]);