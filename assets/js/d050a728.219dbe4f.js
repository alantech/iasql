"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[27426],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},i="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},_=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),i=c(n),_=a,p=i["".concat(d,".").concat(_)]||i[_]||m[_]||o;return n?r.createElement(p,s(s({ref:t},u),{},{components:n})):r.createElement(p,s({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=_;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[i]="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}_.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(67294),a=n(86010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,s),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>R});var r=n(87462),a=n(67294),o=n(86010),s=n(12466),l=n(16550),d=n(91980),c=n(67392),u=n(50012);function i(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function m(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??i(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function _(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:n}=e;const r=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,d._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function E(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=m(e),[s,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!_({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[d,c]=p({queryString:n,groupId:r}),[i,E]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,u.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),h=(()=>{const e=d??i;return _({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!_({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),E(e)}),[c,E,o]),tabValues:o}}var h=n(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:n,selectedValue:l,selectValue:d,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:i}=(0,s.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),r=c[n].value;r!==l&&(i(t),d(r))},_=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:s}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:_,onClick:m},s,{className:(0,o.Z)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":l===t})}),n??t)})))}function N(e){let{lazy:t,children:n,selectedValue:r}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function y(e){const t=E(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},a.createElement(f,(0,r.Z)({},e,t)),a.createElement(N,(0,r.Z)({},e,t)))}function R(e){const t=(0,h.Z)();return a.createElement(y,(0,r.Z)({key:String(t)},e))}},62891:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>i});var r=n(87462),a=(n(67294),n(3905)),o=n(74866),s=n(85162);const l={id:"aws_route53",title:"aws_route53",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},d=void 0,c={unversionedId:"modules/aws/aws_route53",id:"version-0.1.9/modules/aws/aws_route53",title:"aws_route53",description:"Tables",source:"@site/versioned_docs/version-0.1.9/modules/aws/aws_route53.md",sourceDirName:"modules/aws",slug:"/modules/aws/aws_route53",permalink:"/docs/modules/aws/aws_route53",draft:!1,editUrl:null,tags:[],version:"0.1.9",frontMatter:{id:"aws_route53",title:"aws_route53",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"aws_rds",permalink:"/docs/modules/aws/aws_rds"},next:{title:"aws_s3",permalink:"/docs/modules/aws/aws_s3"}},u={},i=[{value:"Tables",id:"tables",level:3},{value:"Enums",id:"enums",level:3}],m={toc:i},_="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(_,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(o.Z,{queryString:"view",mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"components",label:"Components",default:!0,mdxType:"TabItem"},(0,a.kt)("h3",{id:"tables"},"Tables"),(0,a.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,a.kt)("a",{parentName:"p",href:"../../aws/tables/aws_route53_entity_alias_target.AliasTarget"},"alias_target")),(0,a.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,a.kt)("a",{parentName:"p",href:"../../aws/tables/aws_route53_entity_hosted_zone.HostedZone"},"hosted_zone")),(0,a.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,a.kt)("a",{parentName:"p",href:"../../aws/tables/aws_route53_entity_resource_records_set.ResourceRecordSet"},"resource_record_set")),(0,a.kt)("h3",{id:"enums"},"Enums"),(0,a.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,a.kt)("a",{parentName:"p",href:"../../aws/enums/aws_route53_entity_resource_records_set.RecordType"},"record_type"))),(0,a.kt)(s.Z,{value:"code-examples",label:"Code examples",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("details",{open:"true"},(0,a.kt)("summary",{mdxType:"summary"},"Manage Route53"),(0,a.kt)("codeblock",{language:"sql"},"--- installs module\nSELECT * FROM iasql_install('<modules>');\n--- adds a new hosted zone\nINSERT INTO hosted_zone (domain_name)\nVALUES ('<domainName>');\n--- check adds a new hosted zone\nSELECT *\nFROM hosted_zone\nWHERE domain_name = '<domainName>';\n--- check default record sets have been added\nSELECT *\nFROM resource_record_set\nINNER JOIN hosted_zone ON hosted_zone.id = parent_hosted_zone_id\nWHERE domain_name = '<domainName>';\n--- adds a new record to hosted zone\nINSERT INTO resource_record_set (name, record_type, record, ttl, parent_hosted_zone_id)\nSELECT '<resourceRecordSetName>', '<resourceRecordSetTypeCNAME>', '<resourceRecordSetRecord>',<resourceRecordSetTtl>, id\nFROM hosted_zone\nWHERE domain_name = '<domainName>';\n--- check default record sets have been added\nSELECT *\nFROM resource_record_set\nINNER JOIN hosted_zone ON hosted_zone.id = parent_hosted_zone_id\nWHERE domain_name = '<domainName>';\n--- adds a new A record to hosted zone\nBEGIN;\nINSERT INTO load_balancer (load_balancer_name, scheme, load_balancer_type, ip_address_type)\nVALUES ('<lbName>', '<lbScheme>', '<lbType>', '<lbIPAddressType>');\n\nINSERT INTO alias_target (load_balancer_id)\nVALUES ((SELECT id FROM load_balancer WHERE load_balancer_name = '<lbName>'));\n\nINSERT INTO resource_record_set (name, record_type, parent_hosted_zone_id, alias_target_id)\nSELECT '<aliasResourceRecordSetName>', '<resourceRecordSetTypeA>', hosted_zone.id, alias_target.id\nFROM hosted_zone, alias_target\nINNER JOIN load_balancer ON load_balancer.id = alias_target.load_balancer_id\nWHERE domain_name = '<domainName>' AND load_balancer.load_balancer_name = '<lbName>';\nCOMMIT;\n--- check alias target record has been added\nSELECT *\nFROM resource_record_set\nINNER JOIN hosted_zone ON hosted_zone.id = parent_hosted_zone_id\nWHERE domain_name = '<domainName>';\n--- adds a new record to hosted zone\nINSERT INTO resource_record_set (name, record_type, record, ttl, parent_hosted_zone_id)\nSELECT '<resourceRecordSetMultilineName>', '<resourceRecordSetTypeA>', '<resourceRecordSetRecordMultiline>',<resourceRecordSetTtl>, id\nFROM hosted_zone\nWHERE domain_name = '<replaceDomainName>';\n--- check multiline record set have been added\nSELECT *\nFROM resource_record_set\nINNER JOIN hosted_zone ON hosted_zone.id = parent_hosted_zone_id\nWHERE domain_name = '<replaceDomainName>';\n--- updates a record name\nUPDATE resource_record_set\nSET name = '<resourceRecordSetMultilineNameReplace>'\nFROM hosted_zone\nWHERE domain_name = '<replaceDomainName>' AND name = '<resourceRecordSetMultilineName>';\n--- check records after update\nSELECT *\nFROM resource_record_set\nINNER JOIN hosted_zone ON hosted_zone.id = parent_hosted_zone_id\nWHERE domain_name = '<replaceDomainName>';\n--- deletes the hosted zone with the same name\nBEGIN;\nDELETE FROM resource_record_set\nUSING hosted_zone\nWHERE hosted_zone.id IN (SELECT id FROM hosted_zone WHERE domain_name = '<replaceDomainName>' ORDER BY ID DESC LIMIT 1);\nDELETE FROM hosted_zone\nWHERE id IN (SELECT id FROM hosted_zone WHERE domain_name = '<replaceDomainName>' ORDER BY ID DESC LIMIT 1);\nCOMMIT;\n--- deletes records\nDELETE FROM resource_record_set\nUSING hosted_zone\nWHERE hosted_zone.id = parent_hosted_zone_id AND domain_name = '<replaceDomainName>';\n--- check records after delete. SOA and NS recordsets have to be keeped\nSELECT *\nFROM resource_record_set\nINNER JOIN hosted_zone ON hosted_zone.id = parent_hosted_zone_id\nWHERE domain_name = '<replaceDomainName>';\n--- deletes mandatory records and hosted zone\nBEGIN;\nDELETE FROM resource_record_set\nUSING hosted_zone\nWHERE hosted_zone.id = parent_hosted_zone_id AND domain_name = '<replaceDomainName>';\nDELETE FROM hosted_zone\nWHERE domain_name = '<replaceDomainName>';\nCOMMIT;\n--- check records after delete\nSELECT *\nFROM resource_record_set\nINNER JOIN hosted_zone ON hosted_zone.id = parent_hosted_zone_id\nWHERE domain_name = '<replaceDomainName>';\n--- check hosted zones after delete\nSELECT *\nFROM hosted_zone\nWHERE domain_name = '<replaceDomainName>';\n"))))))}p.isMDXComponent=!0}}]);