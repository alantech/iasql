"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[42703],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(a),h=n,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||o;return a?r.createElement(m,s(s({ref:t},u),{},{components:a})):r.createElement(m,s({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},23038:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=a(87462),n=(a(67294),a(3905)),o=a(44996),s=a(50941);const i={sidebar_position:1,date:new Date("2022-12-14T00:00:00.000Z"),title:"Deploy containerized app to ECS Fargate",slug:"/fargate",tags:["tutorial"]},l=void 0,c={permalink:"/blog/fargate",editUrl:"https://github.com/alantech/iasql/tree/main/site/blog/tutorials/sql.mdx",source:"@site/blog/tutorials/sql.mdx",title:"Deploy containerized app to ECS Fargate",description:"In this tutorial, we will run SQL queries on an IaSQL database to deploy a Node.js HTTP server within a docker container on your AWS account using Fargate ECS, IAM, ECR, and ELB. The container image will be built locally, hosted within a private repository in ECR, and deployed to ECS using Fargate.",date:"2022-12-14T00:00:00.000Z",formattedDate:"December 14, 2022",tags:[{label:"tutorial",permalink:"/blog/tags/tutorial"}],readingTime:4.04,hasTruncateMarker:!0,authors:[],frontMatter:{sidebar_position:1,date:"2022-12-14T00:00:00.000Z",title:"Deploy containerized app to ECS Fargate",slug:"/fargate",tags:["tutorial"]},prevItem:{title:"Deploy containerized app to Fargate (Prisma)",permalink:"/blog/prisma"},nextItem:{title:"UPDATE iasql SET source = 'open';",permalink:"/blog/os-iasql"}},u={authorsImageUrls:[]},p=[{value:"Start managing an AWS account with a PostgreSQL IaSQL db",id:"start-managing-an-aws-account-with-a-postgresql-iasql-db",level:2},{value:"Add the necessary cloud services to the PostgreSQL database",id:"add-the-necessary-cloud-services-to-the-postgresql-database",level:2},{value:"Provision cloud resources in your AWS account",id:"provision-cloud-resources-in-your-aws-account",level:2},{value:"Delete Managed Cloud Resources",id:"delete-managed-cloud-resources",level:2}],d={toc:p},h="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(h,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"In this tutorial, we will run SQL queries on an IaSQL ",(0,n.kt)("a",{parentName:"p",href:"/docs/database"},"database")," to deploy a Node.js HTTP server within a docker container on your AWS account using Fargate ECS, IAM, ECR, and ELB. The container image will be built locally, hosted within a private repository in ECR, and deployed to ECS using Fargate."),(0,n.kt)("p",null,"IaSQL is an ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/alantech/iasql"},"open-source")," software tool that creates a two-way connection between an unmodified PostgreSQL database and an AWS account so you can manage your infrastructure from a database."),(0,n.kt)("h2",{id:"start-managing-an-aws-account-with-a-postgresql-iasql-db"},"Start managing an AWS account with a PostgreSQL IaSQL db"),(0,n.kt)("p",null,"First, make sure you have an ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users.html"},"IAM user")," in AWS or create one with ",(0,n.kt)("strong",{parentName:"p"},"Programmatic access")," through the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html#id_users_create_console"},"console/UI")," or ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html#id_users_create_cliwpsapi"},"CLI"),". Ensure that the IAM role has sufficient permissions to deploy and manage all your infrastructure resources."),(0,n.kt)("p",null,"There are two parts to each ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys"},"access key"),", which you\u2019ll see in the IAM console/CLI after you create it, an id and a secret. Input these in the connect account modal:"),(0,n.kt)(s.Z,{alt:"Connect",style:{width:"440"},sources:{light:(0,o.Z)("/screenshots/connect.png"),dark:(0,o.Z)("/screenshots/connect_dark.png")},mdxType:"ThemedImage"}),(0,n.kt)("p",null,"If you use the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/cli/"},"AWS CLI"),", you can look at the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/sdkref/latest/guide/file-location.html"},"credentials configured locally"),". In macOS and Linux this is as simple as:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ cat ~/.aws/credentials\n[default]\naws_access_key_id = <YOUR_ACCESS_KEY_ID>\naws_secret_access_key = <YOUR_SECRET_ACCESS_KEY>\n")),(0,n.kt)("p",null,"You will be able to see your PostgreSQL connection information when you press Connect."),(0,n.kt)(s.Z,{alt:"Credentials",style:{width:"440",border:"2px solid rgba(52, 52, 52, 0.1)"},sources:{light:(0,o.Z)("/screenshots/credentials.png"),dark:(0,o.Z)("/screenshots/credentials_dark.png")},mdxType:"ThemedImage"}),(0,n.kt)("p",null,"If you want to connect to the PostgreSQL database outside of the IaSQL dashboard SQL editor, make sure to copy the PostgreSQL connection string as you will not see it again."),(0,n.kt)("h2",{id:"add-the-necessary-cloud-services-to-the-postgresql-database"},"Add the necessary cloud services to the PostgreSQL database"),(0,n.kt)("p",null,"Use the ",(0,n.kt)("inlineCode",{parentName:"p"},"iasql_install")," SQL function to install ",(0,n.kt)("a",{parentName:"p",href:"/docs/module"},"modules")," into the PostgreSQL database."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * from iasql_install(\n   'aws_ecs_simplified'\n);\n")),(0,n.kt)("p",null,"If the function call is successful, it will return a virtual table with a record for each new table in your database under ",(0,n.kt)("inlineCode",{parentName:"p"},"created_table_name")," and the number of existing resources or records imported from the account under ",(0,n.kt)("inlineCode",{parentName:"p"},"record_count"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"       module_name        |      created_table_name       | record_count\n--------------------------+-------------------------------+--------------\n aws_cloudwatch           | log_group                     |            0\n aws_iam                  | iam_role                      |            0\n aws_ecr                  | public_repository             |            0\n aws_ecr                  | repository                    |            1\n aws_ecr                  | repository_policy             |            0\n aws_security_group       | security_group                |            2\n aws_security_group       | security_group_rule           |            0\n aws_vpc                  | vpc                           |            1\n aws_vpc                  | subnet                        |            3\n aws_elb                  | load_balancer                 |            0\n aws_elb                  | target_group                  |            0\n aws_elb                  | listener                      |            0\n aws_elb                  | load_balancer_security_groups |            0\n aws_ecs_fargate          | cluster                       |            0\n aws_ecs_fargate          | service                       |            0\n aws_ecs_fargate          | task_definition               |            0\n aws_ecs_fargate          | container_definition          |            0\n aws_ecs_fargate          | service_security_groups       |            0\n aws_ecs_simplified       | ecs_simplified                |            0\n(17 rows)\n")),(0,n.kt)("h2",{id:"provision-cloud-resources-in-your-aws-account"},"Provision cloud resources in your AWS account"),(0,n.kt)("p",null,"Insert a row into the ",(0,n.kt)("inlineCode",{parentName:"p"},"ecs_simplified")," table within an IaSQL ",(0,n.kt)("a",{parentName:"p",href:"/docs/transaction"},(0,n.kt)("inlineCode",{parentName:"a"},"transaction"))," the changes described in the PostgreSQL db to your cloud account which will take a few minutes waiting for AWS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * from iasql_begin();\n\nINSERT INTO ecs_simplified (app_name, app_port, public_ip, image_tag)\nVALUES ('quickstart', 8088, true, 'latest');\n\nSELECT * from iasql_commit();\n")),(0,n.kt)("p",null,"If the function call is successful, it will return a virtual table with a record for each cloud resource that has been created, deleted, or updated.\nLogin, build and push your code to the container registry"),(0,n.kt)("p",null,"Previously, you needed to manually build and push your image to the ECR. But recently we've added the high-level ",(0,n.kt)("inlineCode",{parentName:"p"},"ecr_build")," SQL function which does all those steps automatically. It will do the following:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Pull the code from your Github repository"),(0,n.kt)("li",{parentName:"ul"},"Build the Docker image in the directory you've specified"),(0,n.kt)("li",{parentName:"ul"},"Push the image to the ECR repository you've provided")),(0,n.kt)("p",null,"All of these steps will be done in a CodeBuild project in your AWS account. To use the ",(0,n.kt)("inlineCode",{parentName:"p"},"ecr_build")," function, you can run:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT ecr_build(\n   'https://github.com/alantech/iasql/', -- replace with your own Github repo if you want to use your own codebase\n   (SELECT id\n    FROM repository\n    WHERE repository_name = 'quickstart-repository')::varchar(255), -- replace quickstart if you've changed the project name\n   './examples/ecs-fargate/prisma/app', -- the sub directory in the Github repo that the image should be built in\n   'main', -- the Github repo branch name\n   '' -- replace your github personal access token here if the repo is private\n);\n")),(0,n.kt)("p",null,"After running the above SQL command to completion, you can check the running app using the load balancer DNS name. To grab the name, run:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"QUICKSTART_LB_DNS=$(psql -At 'postgres://d0va6ywg:nfdDh#EP4CyzveFr@localhost:5432/_4b2bb09a59a411e4' -c \"\nSELECT dns_name\nFROM load_balancer\nWHERE load_balancer_name = '<project-name>-load-balancer';\")\n")),(0,n.kt)("p",null,"And then connect to your service!"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"curl ${QUICKSTART_LB_DNS}:8088/health\n")),(0,n.kt)("h2",{id:"delete-managed-cloud-resources"},"Delete Managed Cloud Resources"),(0,n.kt)("p",null,"Delete the resources created by this tutorial using the following SQL code:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="psql postgres://qpp3pzqb:LN6jnHfhRJTBD6ia@localhost:5432/_3ba201e349a11daf -c"',title:'"psql',"postgres://qpp3pzqb:LN6jnHfhRJTBD6ia@localhost:5432/_3ba201e349a11daf":!0,'-c"':!0},"DELETE FROM repository_image WHERE private_repository_id = (SELECT id FROM repository WHERE repository_name = 'quickstart-repository');\nDELETE FROM ecs_simplified WHERE app_name = 'quickstart';\n")))}m.isMDXComponent=!0}}]);