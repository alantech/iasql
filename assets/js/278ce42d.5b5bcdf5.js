"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[65084],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),h=a,m=p["".concat(c,".").concat(h)]||p[h]||d[h]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},47773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={slug:"rds-privatelink",title:"Securely connect to an Amazon RDS via PrivateLink using SQL",authors:["yrobla","depombo"],date:new Date("2023-03-06T00:00:00.000Z"),tags:["tutorial"]},i=void 0,s={permalink:"/blog/rds-privatelink",editUrl:"https://github.com/alantech/iasql/tree/main/site/blog/tutorials/secure-rds-endpoints.mdx",source:"@site/blog/tutorials/secure-rds-endpoints.mdx",title:"Securely connect to an Amazon RDS via PrivateLink using SQL",description:"Do you have some database instances on RDS and wonder what's the most secure way to reach them? In this post, we will walk you through how to securely connect to an AWS RDS instance using PrivateLink and IaSQL. AWS PrivateLink provides private connectivity between virtual private clouds (VPCs), supported AWS services, and your on-premises networks without exposing your traffic to the public internet. IaSQL is an open-source software tool that creates a two-way connection between an unmodified PostgreSQL database and an AWS account so you can manage your infrastructure from a database.",date:"2023-03-06T00:00:00.000Z",formattedDate:"March 6, 2023",tags:[{label:"tutorial",permalink:"/blog/tags/tutorial"}],readingTime:2.75,hasTruncateMarker:!0,authors:[{name:"Yolanda Robla",imageURL:"https://github.com/yrobla.png",key:"yrobla"},{name:"L. Fernando De Pombo",imageURL:"https://github.com/depombo.png",key:"depombo"}],frontMatter:{slug:"rds-privatelink",title:"Securely connect to an Amazon RDS via PrivateLink using SQL",authors:["yrobla","depombo"],date:"2023-03-06T00:00:00.000Z",tags:["tutorial"]},prevItem:{title:"Save $ on public S3 buckets using VPC endpoints via SQL",permalink:"/blog/save-s3-vpc"},nextItem:{title:"Deploy a Static Website on AWS using SQL",permalink:"/blog/deploy-static-website"}},c={authorsImageUrls:[void 0,void 0]},l=[{value:"Are my RDS instances properly configured?",id:"are-my-rds-instances-properly-configured",level:3},{value:"Testing the result",id:"testing-the-result",level:3}],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Do you have some database instances on RDS and wonder what's the most secure way to reach them? In this post, we will walk you through how to securely connect to an AWS RDS instance using PrivateLink and IaSQL. AWS PrivateLink provides private connectivity between virtual private clouds (VPCs), supported AWS services, and your on-premises networks without exposing your traffic to the public internet. IaSQL is an ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/alantech/iasql"},"open-source")," software tool that creates a two-way connection between an unmodified PostgreSQL database and an AWS account so you can manage your infrastructure from a database."),(0,a.kt)("p",null,"When creating a database, AWS provides some specific information about the hostnames and ports used. You can access those to reach your databases by using specific clients for MySQL, Postgres, etc...:"),(0,a.kt)("img",{src:"/secure-rds/how_to_connect_rds.png"}),(0,a.kt)("p",null,"On a public VPC, those endpoints will be public by default. However, consider creating them under a private VPC and accessing them internally, to grant additional security to critical services. AWS PrivateLink offers the possibility to securely access those services without exposing them to the internet, just using Amazon's private network."),(0,a.kt)("h3",{id:"are-my-rds-instances-properly-configured"},"Are my RDS instances properly configured?"),(0,a.kt)("p",null,"Please use this query to check it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Run SQL to check your endpoints"',title:'"Run',SQL:!0,to:!0,check:!0,your:!0,'endpoints"':!0}," ---- Installing the needed modules\nSELECT\n  iasql_install ('aws_rds', 'aws_vpc');\n\n-- Perform the query for endpoints\nSELECT\n  rds.region,\n  vpc.is_default,\n  vpc.cidr_block,\n  (\n    SELECT\n      COUNT(*) > 0\n    FROM\n      endpoint_interface\n    WHERE\n      endpoint_interface.region = rds.region\n      AND service = 'rds'\n      AND endpoint_interface.vpc_id = vpc.id\n  ) AS has_endpoint_interface\nFROM\n  rds\n  LEFT OUTER JOIN vpc ON vpc.region = rds.region;\n")),(0,a.kt)("p",null,"Have you found missing endpoints? No problem, IaSQL can generate missing Endpoint Interfaces for you:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Add missing endpoint interfaces"',title:'"Add',missing:!0,endpoint:!0,'interfaces"':!0},"SELECT\n  *\nFROM\n  iasql_begin ();\n\n-- Inserts the missing endpoints\nINSERT INTO\n  endpoint_interface (region, vpc_id, service, private_dns_enabled)\nSELECT\n  RDS.region,\n  vpc.id,\n  'rds',\n  TRUE\nFROM\n  rds\n  INNER JOIN vpc ON rds.region = vpc.region\nWHERE\n  NOT EXISTS (\n    SELECT\n      id\n    FROM\n      endpoint_interface\n    WHERE\n      endpoint_interface.region = rds.region\n      AND endpoint_interface.vpc_id = vpc.id\n  );\n\n-- Preview the changes\nSELECT\n  *\nFROM\n  iasql_preview ();\n\n-- Apply the changes\n--select * from iasql_commit();\n-- Rollback the changes\nselect * from iasql_rollback();\n")),(0,a.kt)("p",null,"Running this query on an IaSQL database will auto-generate the missing endpoint interfaces and will allow you to preview the changes to be applied on your cloud. Once you are OK with the results, you can uncomment the ",(0,a.kt)("inlineCode",{parentName:"p"},"iasql_commit")," query, comment the ",(0,a.kt)("inlineCode",{parentName:"p"},"iasql_rollback")," query, and it will create the endpoints for you. If the final results in the cloud are not as expected, you can always roll back your changes by calling the ",(0,a.kt)("inlineCode",{parentName:"p"},"iasql_rollback")," command."),(0,a.kt)("h3",{id:"testing-the-result"},"Testing the result"),(0,a.kt)("p",null,"After running the query, you should have Endpoint Interfaces created for your RDS resources. Those should be on the region and VPC where you had your databases:"),(0,a.kt)("div",{class:"col col--12"},(0,a.kt)("img",{src:"/secure-rds/rds_endpoint_interfaces_created.png",height:"200"})),(0,a.kt)("p",null,"To start testing the result, you can start a new EC2 instance on a private VPC in the same region where your RDS and Endpoint interface is configured. You can double-check that there is no internet connectivity. But the RDS endpoint could still be reached, by using the interface that has been created:"),(0,a.kt)("div",{class:"col col--12"},(0,a.kt)("img",{src:"/secure-rds/access_rds_endpoint.png",height:"200"})),(0,a.kt)("p",null,"Please note that you could only use those endpoints from the same region. You could reach the services in multiple regions with the use of ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html"},"VPC peering")))}d.isMDXComponent=!0}}]);