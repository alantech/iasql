"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[17307],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>_});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),c=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},i=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),m=c(a),p=n,_=m["".concat(o,".").concat(p)]||m[p]||d[p]||s;return a?r.createElement(_,l(l({ref:t},i),{},{components:a})):r.createElement(_,l({ref:t},i))}));function _(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,l=new Array(s);l[0]=p;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u[m]="string"==typeof e?e:n,l[1]=u;for(var c=2;c<s;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>l});var r=a(67294),n=a(86010);const s={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(s.tabItem,l),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>k});var r=a(87462),n=a(67294),s=a(86010),l=a(12466),u=a(16550),o=a(91980),c=a(67392),i=a(50012);function m(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function d(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function _(e){let{queryString:t=!1,groupId:a}=e;const r=(0,u.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o._X)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,s=d(e),[l,u]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[o,c]=_({queryString:a,groupId:r}),[m,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,i.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:r}),b=(()=>{const e=o??m;return p({value:e,tabValues:s})?e:null})();(0,n.useLayoutEffect)((()=>{b&&u(b)}),[b]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);u(e),c(e),f(e)}),[c,f,s]),tabValues:s}}var b=a(72389);const E={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:a,selectedValue:u,selectValue:o,tabValues:c}=e;const i=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),d=e=>{const t=e.currentTarget,a=i.indexOf(t),r=c[a].value;r!==u&&(m(t),o(r))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=i.indexOf(e.currentTarget)+1;t=i[a]??i[0];break}case"ArrowLeft":{const a=i.indexOf(e.currentTarget)-1;t=i[a]??i[i.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>i.push(e),onKeyDown:p,onClick:d},l,{className:(0,s.Z)("tabs__item",E.tabItem,l?.className,{"tabs__item--active":u===t})}),a??t)})))}function h(e){let{lazy:t,children:a,selectedValue:r}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function w(e){const t=f(e);return n.createElement("div",{className:(0,s.Z)("tabs-container",E.tabList)},n.createElement(y,(0,r.Z)({},e,t)),n.createElement(h,(0,r.Z)({},e,t)))}function k(e){const t=(0,b.Z)();return n.createElement(w,(0,r.Z)({key:String(t)},e))}},49897:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>_,frontMatter:()=>u,metadata:()=>c,toc:()=>m});var r=a(87462),n=(a(67294),a(3905)),s=a(74866),l=a(85162);const u={id:"aws_iam",title:"aws_iam",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},o=void 0,c={unversionedId:"modules/aws/aws_iam",id:"modules/aws/aws_iam",title:"aws_iam",description:"Tables",source:"@site/docs/modules/aws/aws_iam.md",sourceDirName:"modules/aws",slug:"/modules/aws/aws_iam",permalink:"/docs/next/modules/aws/aws_iam",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"aws_iam",title:"aws_iam",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"aws_elb",permalink:"/docs/next/modules/aws/aws_elb"},next:{title:"aws_lambda",permalink:"/docs/next/modules/aws/aws_lambda"}},i={},m=[{value:"Tables",id:"tables",level:3},{value:"Functions",id:"functions",level:3},{value:"Enums",id:"enums",level:3}],d={toc:m},p="wrapper";function _(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)(s.Z,{queryString:"view",mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"components",label:"Components",default:!0,mdxType:"TabItem"},(0,n.kt)("h3",{id:"tables"},"Tables"),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/tables/aws_iam_entity_access_key.AccessKey"},"access_key")),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/tables/aws_iam_entity_role.IamRole"},"iam_role")),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/tables/aws_iam_entity_user.IamUser"},"iam_user")),(0,n.kt)("h3",{id:"functions"},"Functions"),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/tables/aws_iam_rpcs_request.AccessKeyRequestRpc"},"access_key_request")),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/tables/aws_iam_rpcs_set_password.SetUserPasswordRequestRpc"},"set_user_password_request")),(0,n.kt)("h3",{id:"enums"},"Enums"),(0,n.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,n.kt)("a",{parentName:"p",href:"../../aws/enums/aws_iam_entity_access_key.accessKeyStatusEnum"},"access_key_status"))),(0,n.kt)(l.Z,{value:"code-examples",label:"Code examples",mdxType:"TabItem"},(0,n.kt)("p",null,(0,n.kt)("details",{open:"true"},(0,n.kt)("summary",{mdxType:"summary"},"Manage Roles"),(0,n.kt)("codeblock",{language:"sql"},"--- installs the iam module\nSELECT * FROM iasql_install('<modules>');\n--- adds a new role\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<taskRoleName>', '<attachAssumeTaskPolicy>', array['<taskPolicyArn>']);\n--- check a new role addition\nSELECT *\nFROM iam_role\nWHERE role_name = '<principalServArr>';\n--- tries to update a role description\nUPDATE iam_role SET description = 'description' WHERE role_name = '<taskRoleName>';\n--- tries to update ec2 policy field\nUPDATE iam_role SET assume_role_policy_document = '<attachAssumeLambdaPolicy>' WHERE role_name = '<ec2RoleName>';\n--- tries to restore ec2 policy field\nUPDATE iam_role SET assume_role_policy_document = '<attachAssumeEc2Policy>' WHERE role_name = '<ec2RoleName>';\n--- tries to update role attached policies\nUPDATE iam_role SET attached_policies_arns=array['<servicePolicyArn>'] WHERE role_name = '<taskRoleName>';\n--- deletes the role\nDELETE FROM iam_role\nWHERE role_name = '<taskRoleName>';\n")),(0,n.kt)("details",{open:"true"},(0,n.kt)("summary",{mdxType:"summary"},"Manage Users"),(0,n.kt)("codeblock",{language:"sql"},"--- installs the iam module\nSELECT * FROM iasql_install('<modules>');\n--- adds a new user\nINSERT INTO iam_user (user_name, path)\nVALUES ('<userName>', '<userPath>');\n--- check a new user addition\nSELECT *\nFROM iam_user\nWHERE user_name = '<userName>';\n--- generates an user password\nSELECT *\nFROM set_user_password('<userName>', 'P4ssP4ss', 'true');\n--- updates an user password\nSELECT *\nFROM set_user_password('<userName>', 'P4ssp4ss', 'false');\n--- deletes an user password\nSELECT *\nFROM set_user_password('<userName>', '');\n--- updates user path\nUPDATE iam_user SET path = '<userNewPath>' WHERE user_name = '<userName>';\n--- check that path has been modified\nSELECT *\nFROM iam_user\nWHERE user_name = '<userName>' AND path = '<userNewPath>';\n--- tries to update user attached policies\nUPDATE iam_user SET attached_policies_arns=array['<supportUserPolicyArn>'] WHERE user_name = '<userName>';\n--- generates a new access key\nSELECT *\nFROM access_key_request('<userName>');\n--- check new access key added\nSELECT *\nFROM access_key\nWHERE user_name = '<userName>' AND status='Active';\n--- updates access key status\nUPDATE access_key SET status='Inactive'\nWHERE user_name = '<userName>';\n--- check access key updated\nSELECT *\nFROM access_key\nWHERE user_name = '<userName>' AND status='Inactive';\n--- deletes the access key\nDELETE FROM access_key\nWHERE user_name = '<userName>';\n--- tries to delete an aws user\nDELETE FROM iam_user WHERE user_name = '<userName>';\n"))))))}_.isMDXComponent=!0}}]);