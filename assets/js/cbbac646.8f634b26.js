"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[42010],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>d});var u=t(67294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);r&&(u=u.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,u)}return t}function n(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,u,s=function(e,r){if(null==e)return{};var t,u,s={},o=Object.keys(e);for(u=0;u<o.length;u++)t=o[u],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(u=0;u<o.length;u++)t=o[u],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var a=u.createContext({}),c=function(e){var r=u.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):n(n({},r),e)),t},l=function(e){var r=c(e.components);return u.createElement(a.Provider,{value:r},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return u.createElement(u.Fragment,{},r)}},_=u.forwardRef((function(e,r){var t=e.components,s=e.mdxType,o=e.originalType,a=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=c(t),_=s,d=p["".concat(a,".").concat(_)]||p[_]||g[_]||o;return t?u.createElement(d,n(n({ref:r},l),{},{components:t})):u.createElement(d,n({ref:r},l))}));function d(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var o=t.length,n=new Array(o);n[0]=_;var i={};for(var a in r)hasOwnProperty.call(r,a)&&(i[a]=r[a]);i.originalType=e,i[p]="string"==typeof e?e:s,n[1]=i;for(var c=2;c<o;c++)n[c]=t[c];return u.createElement.apply(null,n)}return u.createElement.apply(null,t)}_.displayName="MDXCreateElement"},85162:(e,r,t)=>{t.d(r,{Z:()=>n});var u=t(67294),s=t(86010);const o={tabItem:"tabItem_Ymn6"};function n(e){let{children:r,hidden:t,className:n}=e;return u.createElement("div",{role:"tabpanel",className:(0,s.Z)(o.tabItem,n),hidden:t},r)}},74866:(e,r,t)=>{t.d(r,{Z:()=>h});var u=t(87462),s=t(67294),o=t(86010),n=t(12466),i=t(16550),a=t(91980),c=t(67392),l=t(50012);function p(e){return function(e){return s.Children.map(e,(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:r,label:t,attributes:u,default:s}}=e;return{value:r,label:t,attributes:u,default:s}}))}function g(e){const{values:r,children:t}=e;return(0,s.useMemo)((()=>{const e=r??p(t);return function(e){const r=(0,c.l)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function _(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function d(e){let{queryString:r=!1,groupId:t}=e;const u=(0,i.k6)(),o=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,a._X)(o),(0,s.useCallback)((e=>{if(!o)return;const r=new URLSearchParams(u.location.search);r.set(o,e),u.replace({...u.location,search:r.toString()})}),[o,u])]}function E(e){const{defaultValue:r,queryString:t=!1,groupId:u}=e,o=g(e),[n,i]=(0,s.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!_({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const u=t.find((e=>e.default))??t[0];if(!u)throw new Error("Unexpected error: 0 tabValues");return u.value}({defaultValue:r,tabValues:o}))),[a,c]=d({queryString:t,groupId:u}),[p,E]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[u,o]=(0,l.Nk)(t);return[u,(0,s.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:u}),y=(()=>{const e=a??p;return _({value:e,tabValues:o})?e:null})();(0,s.useLayoutEffect)((()=>{y&&i(y)}),[y]);return{selectedValue:n,selectValue:(0,s.useCallback)((e=>{if(!_({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),E(e)}),[c,E,o]),tabValues:o}}var y=t(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function m(e){let{className:r,block:t,selectedValue:i,selectValue:a,tabValues:c}=e;const l=[],{blockElementScrollPositionUntilNextRender:p}=(0,n.o5)(),g=e=>{const r=e.currentTarget,t=l.indexOf(r),u=c[t].value;u!==i&&(p(r),a(u))},_=e=>{let r=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;r=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;r=l[t]??l[l.length-1];break}}r?.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},r)},c.map((e=>{let{value:r,label:t,attributes:n}=e;return s.createElement("li",(0,u.Z)({role:"tab",tabIndex:i===r?0:-1,"aria-selected":i===r,key:r,ref:e=>l.push(e),onKeyDown:_,onClick:g},n,{className:(0,o.Z)("tabs__item",f.tabItem,n?.className,{"tabs__item--active":i===r})}),t??r)})))}function b(e){let{lazy:r,children:t,selectedValue:u}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=o.find((e=>e.props.value===u));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},o.map(((e,r)=>(0,s.cloneElement)(e,{key:r,hidden:e.props.value!==u}))))}function T(e){const r=E(e);return s.createElement("div",{className:(0,o.Z)("tabs-container",f.tabList)},s.createElement(m,(0,u.Z)({},e,r)),s.createElement(b,(0,u.Z)({},e,r)))}function h(e){const r=(0,y.Z)();return s.createElement(T,(0,u.Z)({key:String(r)},e))}},91225:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var u=t(87462),s=(t(67294),t(3905)),o=t(74866),n=t(85162);const i={id:"aws_security_group",title:"aws_security_group",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},a=void 0,c={unversionedId:"modules/aws/aws_security_group",id:"version-0.1.9/modules/aws/aws_security_group",title:"aws_security_group",description:"Tables",source:"@site/versioned_docs/version-0.1.9/modules/aws/aws_security_group.md",sourceDirName:"modules/aws",slug:"/modules/aws/aws_security_group",permalink:"/docs/modules/aws/aws_security_group",draft:!1,editUrl:null,tags:[],version:"0.1.9",frontMatter:{id:"aws_security_group",title:"aws_security_group",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"aws_secrets_manager",permalink:"/docs/modules/aws/aws_secrets_manager"},next:{title:"aws_sns",permalink:"/docs/modules/aws/aws_sns"}},l={},p=[{value:"Tables",id:"tables",level:3}],g={toc:p},_="wrapper";function d(e){let{components:r,...t}=e;return(0,s.kt)(_,(0,u.Z)({},g,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)(o.Z,{queryString:"view",mdxType:"Tabs"},(0,s.kt)(n.Z,{value:"components",label:"Components",default:!0,mdxType:"TabItem"},(0,s.kt)("h3",{id:"tables"},"Tables"),(0,s.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,s.kt)("a",{parentName:"p",href:"../../aws/tables/aws_security_group_entity.SecurityGroup"},"security_group")),(0,s.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,s.kt)("a",{parentName:"p",href:"../../aws/tables/aws_security_group_entity.SecurityGroupRule"},"security_group_rule"))),(0,s.kt)(n.Z,{value:"code-examples",label:"Code examples",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("details",{open:"true"},(0,s.kt)("summary",{mdxType:"summary"},"Manage Security groups"),(0,s.kt)("codeblock",{language:"sql"},"--- installs the security group module\nSELECT * FROM iasql_install('<modules>');\n--- adds a new security group\nINSERT INTO security_group (description, group_name)\nVALUES ('Security Group Test', '<prefix>sgtest');\n--- check security_group insertion\nSELECT *\nFROM security_group\nWHERE group_name = '<sgName>';\n--- adds security group rules\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT true, 'tcp', 443, 443, '0.0.0.0/8', '<prefix>testrule', id\nFROM security_group\nWHERE group_name = '<prefix>sgtest';\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv6, description, security_group_id)\nSELECT false, 'tcp', 22, 22, '::/8', '<prefix>testrule2', id\nFROM security_group\nWHERE group_name = '<prefix>sgtest';\n--- updates the security group rule\nUPDATE security_group_rule SET to_port = 8443 WHERE description = '<prefix>testrule';\nUPDATE security_group_rule SET to_port = 8022 WHERE description = '<prefix>testrule2';\n--- check security_group update\nSELECT *\nFROM security_group_rule\nINNER JOIN security_group ON security_group.id = security_group_rule.security_group_id\nWHERE group_name = '<sgName>';\n--- updates the security group\nUPDATE security_group SET group_name = '<prefix>sgtest2' WHERE group_name = '<prefix>sgtest';\n--- adds a new security group rule pointing to itself\nINSERT INTO security_group_rule(description, security_group_id, source_security_group, is_egress)\nVALUES ('<prefix>sgsourcetestrule', (SELECT id FROM security_group WHERE group_name='<prefix>sgforsource'),\n(SELECT id FROM security_group WHERE group_name='<prefix>sgforsource'), false);\n--- check security group rule expanded for TCP pointing to itself\nSELECT *\nFROM security_group_rule\nWHERE source_security_group = (SELECT id FROM security_group WHERE group_name='<prefix>sgforsource') AND ip_protocol='tcp';\n--- check security group rule expanded for UDP pointing to itself\nSELECT *\nFROM security_group_rule\nWHERE source_security_group = (SELECT id FROM security_group WHERE group_name='<prefix>sgforsource') AND ip_protocol='udp';\n--- deletes the source security group rule pointing to itself\nDELETE FROM security_group_rule WHERE source_security_group = (SELECT id FROM security_group WHERE group_name='<prefix>sgforsource');\n--- check no security group rules remain\nSELECT *\nFROM security_group_rule\nWHERE source_security_group = (SELECT id FROM security_group WHERE group_name='<prefix>sgforsource');\n--- deletes the original security group to test source\nDELETE FROM security_group WHERE group_name = '<prefix>sgforsource';\n--- adds self-referential security groups A and B\nINSERT INTO security_group (description, group_name)\nVALUES ('Security Group Test A', '<prefix>sgtestA'), ('Security Group Test B', '<prefix>sgtestB');\n\nINSERT INTO security_group_rule(description, security_group_id, source_security_group, is_egress)\nVALUES ('<prefix>sgtestA', (SELECT id FROM security_group WHERE group_name='<prefix>sgtestA'),\n(SELECT id FROM security_group WHERE group_name='<prefix>sgtestB'), false);\n\nINSERT INTO security_group_rule(description, security_group_id, source_security_group, is_egress)\nVALUES ('<prefix>sgtestB', (SELECT id FROM security_group WHERE group_name='<prefix>sgtestB'),\n(SELECT id FROM security_group WHERE group_name='<prefix>sgtestA'), false);\n--- check that security group and rules are correctly created - tcp, udp, icmp\nSELECT sg.id, sgr.source_security_group FROM security_group sg INNER JOIN security_group_rule sgr ON sg.id = sgr.security_group_id WHERE sg.group_name='<prefix>sgtestA' AND sgr.source_security_group=(SELECT id FROM security_group WHERE group_name='<prefix>sgtestB');\n--- deletes the source security group rule for A\nDELETE FROM security_group_rule WHERE source_security_group = (SELECT id FROM security_group WHERE group_name='<prefix>sgtestA');\n--- deletes the source security group rule for B\nDELETE FROM security_group_rule WHERE source_security_group = (SELECT id FROM security_group WHERE group_name='<prefix>sgtestB');\n--- deletes the source security group for A\nDELETE FROM security_group WHERE group_name = '<prefix>sgtestA';\n--- deletes the source security group for B\nDELETE FROM security_group WHERE group_name = '<prefix>sgtestB';\n--- check no security group rules remain\nSELECT *\nFROM security_group_rule\nWHERE source_security_group IN (SELECT id FROM security_group WHERE group_name='<prefix>sgtestA' OR group_name='<prefix>sgtestB');\n--- check no security group for source remain\nSELECT *\nFROM security_group\nWHERE group_name = '<prefix>sgtestA' OR group_name='<prefix>sgtestB';\n"))))))}d.isMDXComponent=!0}}]);