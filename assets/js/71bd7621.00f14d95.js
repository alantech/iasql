"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[43417],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),u=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return i.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||s;return n?i.createElement(g,o(o({ref:t},p),{},{components:n})):i.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[c]="string"==typeof e?e:a,o[1]=r;for(var u=2;u<s;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},22120:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>u});var i=n(87462),a=(n(67294),n(3905));const s={slug:"deploy-stable-diffusion",title:"Deploy Stable Diffusion in EC2 using a SQL query",date:new Date("2023-03-29T00:00:00.000Z"),authors:["yrobla","depombo"],image:"/img/deploy-stable-diffusion/stable-diffusion-screenshot.png",tags:["tutorial"]},o="Deploy [Stable Diffusion](https://stability.ai/blog/stable-diffusion-public-release) to AWS with one click",r={permalink:"/blog/deploy-stable-diffusion",editUrl:"https://github.com/alantech/iasql/tree/main/site/blog/tutorials/deploy-stable-diffusion.mdx",source:"@site/blog/tutorials/deploy-stable-diffusion.mdx",title:"Deploy Stable Diffusion in EC2 using a SQL query",description:"Stable Diffusion is a deep learning, text-to-image model initially released in 2022. It is primarily used to generate detailed images conditioned on text descriptions, though it can also be applied to other tasks such as inpainting, outpainting, and generating image-to-image translations guided by a text prompt.",date:"2023-03-29T00:00:00.000Z",formattedDate:"March 29, 2023",tags:[{label:"tutorial",permalink:"/blog/tags/tutorial"}],readingTime:5.84,hasTruncateMarker:!0,authors:[{name:"Yolanda Robla",imageURL:"https://github.com/yrobla.png",key:"yrobla"},{name:"L. Fernando De Pombo",imageURL:"https://github.com/depombo.png",key:"depombo"}],frontMatter:{slug:"deploy-stable-diffusion",title:"Deploy Stable Diffusion in EC2 using a SQL query",date:"2023-03-29T00:00:00.000Z",authors:["yrobla","depombo"],image:"/img/deploy-stable-diffusion/stable-diffusion-screenshot.png",tags:["tutorial"]},prevItem:{title:"Why SQL is right for Infrastructure Management",permalink:"/blog/why-sql-for-infrastructure"},nextItem:{title:"Save $ on public S3 buckets using VPC endpoints via SQL",permalink:"/blog/save-s3-vpc"}},l={authorsImageUrls:[void 0,void 0]},u=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Stable Diffusion Installation",id:"stable-diffusion-installation",level:2},{value:"Accessing Stable Diffusion",id:"accessing-stable-diffusion",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Stable Diffusion is a deep learning, text-to-image model initially released in 2022. It is primarily used to generate detailed images conditioned on text descriptions, though it can also be applied to other tasks such as inpainting, outpainting, and generating image-to-image translations guided by a text prompt."),(0,a.kt)("p",null,"There is a publicly available ",(0,a.kt)("a",{parentName:"p",href:"https://beta.dreamstudio.ai/dream"},"tool")," limited to a maximum of 200 images generated. But because the model is open source, you can download and host your own version of it. There are different approaches to host it, but one easy option is to host it in an EC2 GPU instance, using IaSQL to setup everything with just a few SQL queries. IaSQL is an ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iasql/iasql"},"open-source")," software tool that creates a two-way connection between an unmodified PostgreSQL database and an AWS account so you can manage your infrastructure from a database."),(0,a.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,a.kt)("p",null,"Stable Diffusion will need to run on GPU instances. These are likely not enabled in your AWS account by default, so you may need to increase your quota. This post uses ",(0,a.kt)("em",{parentName:"p"},"p")," instances, so you need to check your ",(0,a.kt)("a",{parentName:"p",href:"https://us-east-2.console.aws.amazon.com/servicequotas/home/services/ec2/quotas"},"AWS quota")," for the region where you want to deploy your model and check if you have quota for this type. The model needs 8 vCPUs per instance, so please request 8 vCPUS per each instance you want to deploy. As instances will take some time to terminate while other is started, it is recommended to request quota for at least 2 instances."),(0,a.kt)("img",{src:"/img/deploy-stable-diffusion/request_quota_increase.png",style:{maxWidth:600}}),(0,a.kt)("p",null,"The model needs to integrate with Nvidia GPU to run. This needs to have a custom OS image with drivers installed which does not come built-in. Setting this up is not trivial, but some of the AMIs in the marketplace can help us with that. This post uses an image from the marketplace, so a subscription will be needed to use it.\nPlease visit the ",(0,a.kt)("a",{parentName:"p",href:"https://aws.amazon.com/marketplace/pp/prodview-64e4rx3h733ru?sr=0-1&ref_=beagle&applicationId=AWS-Marketplace-Console"},"AWS marketplace")," and subscribe to the Amazon Linux 2 AMI with NVIDIA TESLA GPU Driver AMI offer."),(0,a.kt)("img",{src:"/img/deploy-stable-diffusion/subscribe_to_marketplace_ami.png",style:{maxWidth:600}}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Please note that you will incur a cost of $3.06/Hour when using this AMI")),(0,a.kt)("h2",{id:"stable-diffusion-installation"},"Stable Diffusion Installation"),(0,a.kt)("p",null,"While Stable Diffusion is a complex model with lots of dependencies, there are pre-built Docker images from the community that ships with all the components in place. We will rely on ",(0,a.kt)("a",{parentName:"p",href:"https://sygil-dev.github.io/sygil-webui/docs/Installation/docker-guide"},"Sygil WebUI")," images to deploy our model. These images are ready to be used out of the box, but there is the possibility to build and customize the images in case it's needed."),(0,a.kt)("p",null,"While this deployment may seem complex at first glance, it can be made easy with ",(0,a.kt)("a",{parentName:"p",href:"https://iasql.com/docs"},"IaSQL"),". In the following section will take you through the steps needed to deploy Stable Diffusion just using SQL queries to inspect and modify the AWS infrastructure."),(0,a.kt)("p",null,"We would need to start by getting the AMI ID for the image on the marketplace, to boot images based on that. We can get it with a simple query using IaSQL SDK module:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Get AMI ID"',title:'"Get',AMI:!0,'ID"':!0},' -- install modules\nSELECT\n  *\nFROM\n  iasql_install (\'aws_sdk\');\n\n-- query for the image based on the image description\nSELECT\n  invoke_ec2 (\n    \'describeImages\',\n    \'{"Filters": [{"Name": "description", "Values": ["Amazon Linux 2 Graphics AMI 2.0.20230119.1 x86_64 HVM gp2"]}, {"Name": "architecture", "Values": ["x86_64"]}]}\'\n  ) -> \'Images\' -> -1 -> \'ImageId\';\n')),(0,a.kt)("p",null,"Now with all prerequisites solved, deploying Stable Diffusion can be done with one click using IaSQL engine. Please note that we will be using a beef p3.2xlarge instance with extra disk space storage, so running this experiment will incur some extra costs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Deploy Stable Diffusion"',title:'"Deploy',Stable:!0,'Diffusion"':!0}," -- install modules\nSELECT\n  *\nFROM\n  iasql_install ('aws_ec2', 'aws_ec2_metadata');\n\n-- start transaction\nSELECT\n  *\nFROM\n  iasql_begin ();\n\n-- set us-east-2 region as default to use it for all the resources in the deployment\nUPDATE\n  aws_regions\nSET\n  is_default = FALSE;\n\nUPDATE\n  aws_regions\nSET\n  is_default = TRUE\nWHERE\n  region = 'us-east-2';\n\n-- insert security groups\nINSERT INTO\n  security_group (description, group_name)\nVALUES\n  ('Stable Diffusion test security group', 'stable_diffusion_sg');\n\nINSERT INTO\n  security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT\n  t.is_egress,\n  t.ip_protocol,\n  t.from_port,\n  t.to_port,\n  t.cidr_ipv4::cidr,\n  t.description,\n  security_group.id\nFROM\n  security_group,\n  (\n    VALUES\n      (FALSE, 'tcp', 22, 22, '0.0.0.0/0', 'stable_diffusion_sg_rule_ssh'),\n      (FALSE, 'tcp', 80, 80, '0.0.0.0/0', 'stable_diffusion_sg_rule_http'),\n      (TRUE, 'tcp', 1, 65535, '0.0.0.0/0', 'stable_diffusion_sg_rule_egress')\n  ) AS t (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description)\nWHERE\n  security_group.group_name = 'stable_diffusion_sg';\n\n-- insert instance with the right userdata\nINSERT INTO\n  general_purpose_volume (size, volume_type, availability_zone, tags, is_root_device)\nVALUES\n  (60, 'gp2', 'us-east-2a', '{\"name\": \"stable-diffusion-blog\"}', TRUE);\n\nINSERT INTO\n  instance (ami, instance_type, subnet_id, tags, user_data, region)\nSELECT\n  'ami-0890479ea4c515bf8', -- this AMI ID is the one we got from the query above\n  'p3.2xlarge',\n  subnet.id,\n  '{\"name\":\"stable-diffusion-blog\"}',\n  '#!/bin/bash\nyum update -y\n\n# install nginx\namazon-linux-extras install nginx1 -y \nsystemctl enable nginx\nsystemctl start nginx\n\ncat > /etc/nginx/conf.d/stable_diffusion.conf << EOF\nserver {\n    listen 80;\n    index index.php index.html index.htm;\n    location / {\n        proxy_pass http://0.0.0.0:8501/;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        proxy_set_header Host \\$http_host;\n        proxy_redirect off;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade \\$http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n    error_page 404 /404.html;\n    error_page 500 502 503 504 /50x.html;\n\n    location = /50x.html {\n        root /usr/share/nginx/html;\n    }\n}\nEOF\n\n# install docker\nyum -y install docker\nusermod -a -G docker ec2-user\nid ec2-user\nnewgrp docker\n\nsystemctl enable docker.service\nsystemctl start docker.service\n\n# install nvidia docker toolkit\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID)    && curl -s -L https://nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.repo | sudo tee /etc/yum.repos.d/nvidia-container-toolkit.repo\nyum -y clean  expire-cache\npushd /tmp\nwget https://github.com/NVIDIA/libnvidia-container/raw/gh-pages/stable/amzn2/x86_64/libnvidia-container-tools-1.12.0-1.x86_64.rpm\nyum -y install  libnvidia-container-tools-1.12.0-1.x86_64.rpm\nyum install -y nvidia-container-toolkit\nnvidia-ctk runtime configure --runtime=docker\nsystemctl restart docker\npopd\n\n# run docker image for stable diffusion\ndocker pull hlky/sd-webui:runpod\ndocker container run --rm -d -p 8501:8501 -e STREAMLIT_SERVER_HEADLESS=true -e \"WEBUI_SCRIPT=webui_streamlit.py\" --runtime=nvidia  -e \"VALIDATE_MODELS=false\" -v \"${PWD}/outputs:/sd/outputs\" --gpus all hlky/sd-webui:runpod\nsystemctl reload nginx\n',\n  'us-east-2'\nFROM\n  subnet\n  INNER JOIN vpc ON vpc.id = subnet.vpc_id\n  AND vpc.is_default = 'Y'\nWHERE\n  vpc.region = 'us-east-2'\n  AND subnet.availability_zone = 'us-east-2a'\nLIMIT\n  1;\n\nINSERT INTO\n  instance_block_device_mapping (device_name, volume_id, instance_id)\nVALUES\n  (\n    '/dev/xvda',\n    (\n      SELECT\n        id\n      FROM\n        general_purpose_volume\n      WHERE\n        tags ->> 'name' = 'stable-diffusion-blog'\n      LIMIT\n        1\n    ),\n    (\n      SELECT\n        id\n      FROM\n        instance\n      WHERE\n        tags ->> 'name' = 'stable-diffusion-blog'\n      LIMIT\n        1\n    )\n  );\n\n-- insert instance security groups\nINSERT INTO\n  instance_security_groups (instance_id, security_group_id)\nSELECT\n  (\n    SELECT\n      id\n    FROM\n      instance\n    WHERE\n      tags ->> 'name' = 'stable-diffusion-blog'\n    LIMIT\n      1\n  ),\n  (\n    SELECT\n      id\n    FROM\n      security_group\n    WHERE\n      group_name = 'stable_diffusion_sg'\n      AND region = 'us-east-2'\n    LIMIT\n      1\n  );\n\nSELECT\n  *\nFROM\n  iasql_commit ();\n")),(0,a.kt)("h2",{id:"accessing-stable-diffusion"},"Accessing Stable Diffusion"),(0,a.kt)("p",null,"The installation procedure will run to completion without intervention and will take over 10-15 minutes, due to the volume of the artifacts to install. After the process finishes you will have your Stable Diffusion web interface up and running, publicly accessible through the public IP of the recently created instance. You can get the details of the public IP of your instance by querying the metadata table in IaSQL:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  public_ip_address\nFROM\n  instance_metadata\nWHERE\n  id = (\n    SELECT\n      id\n    FROM\n      instance\n    WHERE\n      tags ->> 'name' = 'stable-diffusion-blog'\n    LIMIT\n      1\n  );\n")),(0,a.kt)("p",null,"The initial Stable Diffusion installation will be available on the browser just query by ",(0,a.kt)("inlineCode",{parentName:"p"},"http://<public_ip_address>/"),":"),(0,a.kt)("img",{src:"/img/deploy-stable-diffusion/stable-diffusion-screenshot.png",style:{maxWidth:600}}),(0,a.kt)("p",null,"Time to enjoy your image generation and start being creative with Stable Diffusion!"))}d.isMDXComponent=!0}}]);