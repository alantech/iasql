"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[58780],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>_});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,_=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return t?a.createElement(_,i(i({ref:n},c),{},{components:t})):a.createElement(_,i({ref:n},c))}));function _(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var u={};for(var l in n)hasOwnProperty.call(n,l)&&(u[l]=n[l]);u.originalType=e,u[d]="string"==typeof e?e:r,i[1]=u;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),r=t(86010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:t},n)}},74866:(e,n,t)=>{t.d(n,{Z:()=>T});var a=t(87462),r=t(67294),o=t(86010),i=t(12466),u=t(16550),l=t(91980),s=t(67392),c=t(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,s.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function _(e){let{queryString:n=!1,groupId:t}=e;const a=(0,u.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=p(e),[i,u]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[l,s]=_({queryString:t,groupId:a}),[d,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,c.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),E=(()=>{const e=l??d;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{E&&u(E)}),[E]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);u(e),s(e),b(e)}),[s,b,o]),tabValues:o}}var E=t(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:n,block:t,selectedValue:u,selectValue:l,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const n=e.currentTarget,t=c.indexOf(n),a=s[t].value;a!==u&&(d(n),l(a))},m=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},s.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:u===n?0:-1,"aria-selected":u===n,key:n,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,o.Z)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":u===n})}),t??n)})))}function y(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function v(e){const n=b(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",f.tabList)},r.createElement(g,(0,a.Z)({},e,n)),r.createElement(y,(0,a.Z)({},e,n)))}function T(e){const n=(0,E.Z)();return r.createElement(v,(0,a.Z)({key:String(n)},e))}},32676:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>_,frontMatter:()=>u,metadata:()=>s,toc:()=>d});var a=t(87462),r=(t(67294),t(3905)),o=t(74866),i=t(85162);const u={id:"aws_lambda",title:"aws_lambda",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},l=void 0,s={unversionedId:"modules/aws/aws_lambda",id:"version-0.1.9/modules/aws/aws_lambda",title:"aws_lambda",description:"Tables",source:"@site/versioned_docs/version-0.1.9/modules/aws/aws_lambda.md",sourceDirName:"modules/aws",slug:"/modules/aws/aws_lambda",permalink:"/docs/modules/aws/aws_lambda",draft:!1,editUrl:null,tags:[],version:"0.1.9",frontMatter:{id:"aws_lambda",title:"aws_lambda",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"aws_iam",permalink:"/docs/modules/aws/aws_iam"},next:{title:"aws_memory_db",permalink:"/docs/modules/aws/aws_memory_db"}},c={},d=[{value:"Tables",id:"tables",level:3},{value:"Functions",id:"functions",level:3},{value:"Enums",id:"enums",level:3}],p={toc:d},m="wrapper";function _(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)(o.Z,{queryString:"view",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"components",label:"Components",default:!0,mdxType:"TabItem"},(0,r.kt)("h3",{id:"tables"},"Tables"),(0,r.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,r.kt)("a",{parentName:"p",href:"../../aws/tables/aws_lambda_entity_lambda_function.LambdaFunction"},"lambda_function")),(0,r.kt)("h3",{id:"functions"},"Functions"),(0,r.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,r.kt)("a",{parentName:"p",href:"../../aws/tables/aws_lambda_rpcs_invoke.LambdaFunctionInvokeRpc"},"lambda_function_invoke")),(0,r.kt)("h3",{id:"enums"},"Enums"),(0,r.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,r.kt)("a",{parentName:"p",href:"../../aws/enums/aws_lambda_entity_lambda_function.Architecture"},"architecture")),(0,r.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,r.kt)("a",{parentName:"p",href:"../../aws/enums/aws_lambda_entity_lambda_function.PackageType"},"package_type")),(0,r.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,r.kt)("a",{parentName:"p",href:"../../aws/enums/aws_lambda_entity_lambda_function.Runtime"},"runtime"))),(0,r.kt)(i.Z,{value:"code-examples",label:"Code examples",mdxType:"TabItem"},(0,r.kt)("p",null,(0,r.kt)("details",{open:"true"},(0,r.kt)("summary",{mdxType:"summary"},"Manage Lambda functions"),(0,r.kt)("codeblock",{language:"sql"},"--- installs the lambda module\nSELECT * FROM iasql_install('<modules>');\n--- adds a new security group\nINSERT INTO security_group (description, group_name)\nVALUES ('Lambda Security Group', '<sgGroupName>');\n--- adds security group rules\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT false, 'tcp', 80, 80, '0.0.0.0/0', '<prefix>lambda_rule_http', id\nFROM security_group\nWHERE group_name = '<sgGroupName>';\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT true, 'tcp', 1, 65335, '0.0.0.0/0', '<prefix>lambda_rule_egress', id\nFROM security_group\nWHERE group_name = '<sgGroupName>';\n--- adds a new lambda role\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<lambdaFunctionRoleName>', '<attachAssumeLambdaPolicy>', array['<lambdaFunctionRoleTaskPolicyArn>', '<lambdaVpcFunctionRoleTaskPolicyArn>']);\n--- adds a new lambda function\nBEGIN;\nINSERT INTO lambda_function (name, zip_b64, handler, runtime, subnets, role_name)\nVALUES ('<lambdaFunctionName>', '<lambdaFunctionCode>', '<lambdaFunctionHandler>', '<lambdaFunctionRuntime14>', (select array(select subnet_id from subnet inner join vpc on vpc.id = subnet.vpc_id where is_default = true and vpc.region = '<region>' limit 3)), '<lambdaFunctionRoleName>');\n\nINSERT INTO lambda_function_security_groups (lambda_function_id, security_group_id)\nVALUES ((SELECT id FROM lambda_function WHERE name = '<lambdaFunctionName>'), (select id from security_group where group_name = '<sgGroupName>' and region = '<region>' limit 1));\n\nCOMMIT;\n--- check function insertion\nSELECT *\nFROM lambda_function\nWHERE name = '<lambdaFunctionName>';\n--- check security group insertion\nSELECT *\nFROM lambda_function_security_groups\nWHERE lambda_function_id=(SELECT id FROM lambda_function WHERE name = '<lambdaFunctionName>');\n--- invoke lambda\nSELECT *\nFROM invoke_lambda_function('<lambdaFunctionName>', '{\"name\": \"test\"}');\n--- adds a new vpc\nINSERT INTO vpc (cidr_block, tags, enable_dns_hostnames, enable_dns_support, region)\nVALUES ('192.<randIPBlock>.0.0/16', '{\"name\":\"<prefix>-1\"}', true, true, '<region>');\n--- adds a subnet\nINSERT INTO subnet (availability_zone, vpc_id, cidr_block, region)\nSELECT (SELECT name FROM availability_zone WHERE region = '<region>' LIMIT 1), id, '192.<randIPBlock>.0.0/16', '<region>'\nFROM vpc\nWHERE cidr_block = '192.<randIPBlock>.0.0/16' and region='<region>' limit 1;\n--- adds a new security group with non-default vpc\nINSERT INTO security_group (description, group_name, vpc_id)\nVALUES ('Lambda security group for non-default vpc', '<prefix>lambdanotdefault', (SELECT id FROM vpc WHERE cidr_block='192.<randIPBlock>.0.0/16' AND region='<region>' limit 1));\n--- adds security group rules for not default\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT false, 'tcp', 80, 80, '0.0.0.0/0', '<prefix>lambda_rule_http_not_default', id\nFROM security_group\nWHERE group_name = '<prefix>lambdanotdefault';\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT true, 'tcp', 1, 65335, '0.0.0.0/0', '<prefix>lambda_rule_egress_not_default', id\nFROM security_group\nWHERE group_name = '<prefix>lambdanotdefault';\n--- updates the function subnets\nUPDATE lambda_function SET subnets = (select array(select subnet_id from subnet inner join vpc on vpc.id = subnet.vpc_id where vpc.region = '<region>' and subnet.cidr_block='192.<randIPBlock>.0.0/16'))\nWHERE name = '<lambdaFunctionName>';\n--- updates the security groups\nUPDATE lambda_function_security_groups SET security_group_id=(select id from security_group where group_name='<prefix>lambdanotdefault' and region='<region>' limit 1) where lambda_function_id=\n(select id from lambda_function where name='<lambdaFunctionName>' AND region='<region>');\n--- updates the function\nUPDATE lambda_function SET runtime = '<lambdaFunctionRuntime16>' WHERE name = '<lambdaFunctionName>';\n--- updates the function\nUPDATE lambda_function SET zip_b64 = '<lambdaFunctionCodeUpdate>' WHERE name = '<lambdaFunctionName>';\n--- updates the function\nUPDATE lambda_function SET tags = '{\"updated\": \"true\"}' WHERE name = '<lambdaFunctionName>';\n--- deletes the lambda function\nBEGIN;\nDELETE FROM lambda_function_security_groups\nWHERE lambda_function_id = (SELECT id FROM lambda_function WHERE name = '<lambdaFunctionName>');\n\nDELETE FROM lambda_function WHERE name = '<lambdaFunctionName>';\nCOMMIT;\n--- deletes security group rules\nDELETE FROM security_group_rule WHERE description='<prefix>lambda_rule_http' or description='<prefix>lambda_rule_egress' AND region='<region>';\n--- deletes security group\nDELETE FROM security_group WHERE group_name = '<sgGroupName>' AND region='<region>';\n--- deletes the subnet and security groups\nWITH vpc as (\nSELECT id\nFROM vpc\nWHERE cidr_block = '192.<randIPBlock>.0.0/16' AND region='<region>' LIMIT 1\n)\nDELETE FROM subnet\nUSING vpc\nWHERE subnet.vpc_id = vpc.id;\n\nWITH vpc as (\nSELECT id\nFROM vpc\nWHERE cidr_block = '192.<randIPBlock>.0.0/16' AND region='<region>' LIMIT 1\n)\nDELETE FROM route_table_association\nUSING vpc\nWHERE route_table_association.vpc_id = vpc.id;\n\nWITH vpc as (\nSELECT id\nFROM vpc\nWHERE cidr_block = '192.<randIPBlock>.0.0/16' AND region='<region>' LIMIT 1\n)\nDELETE FROM route_table\nUSING vpc\nWHERE route_table.vpc_id = vpc.id;\n\nDELETE FROM security_group_rule WHERE description='<prefix>lambda_rule_http_not_default' or description='<prefix>lambda_rule_egress_not_default' AND region='<region>';\n\nDELETE FROM security_group WHERE group_name = '<prefix>lambdanotdefault' AND region='<region>';\n\nWITH vpc as (\nSELECT id\nFROM vpc\nWHERE cidr_block = '192.<randIPBlock>.0.0/16' AND region='<region>' LIMIT 1\n)\nDELETE FROM security_group_rule\nUSING vpc\nWHERE security_group_id = (\nSELECT id\nFROM security_group\nWHERE security_group.vpc_id=vpc.id);\n\nWITH vpc as (\nSELECT id\nFROM vpc\nWHERE cidr_block = '192.<randIPBlock>.0.0/16' AND region='<region>' LIMIT 1\n)\nDELETE FROM security_group\nUSING vpc\nWHERE security_group.vpc_id = vpc.id;\n\nDELETE FROM vpc WHERE cidr_block='192.<randIPBlock>.0.0/16' AND region='<region>';\n"))))))}_.isMDXComponent=!0}}]);