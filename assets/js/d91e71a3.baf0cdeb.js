"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9447],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,y=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(y,l(l({ref:t},u),{},{components:n})):r.createElement(y,l({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(67294),a=n(86010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,l),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>T});var r=n(87462),a=n(67294),o=n(86010),l=n(12466),i=n(16550),c=n(91980),s=n(67392),u=n(50012);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function _(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=d(e),[l,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[c,s]=y({queryString:n,groupId:r}),[p,_]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,u.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),f=(()=>{const e=c??p;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),_(e)}),[s,_,o]),tabValues:o}}var f=n(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function E(e){let{className:t,block:n,selectedValue:i,selectValue:c,tabValues:s}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),r=s[n].value;r!==i&&(p(t),c(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},l,{className:(0,o.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":i===t})}),n??t)})))}function g(e){let{lazy:t,children:n,selectedValue:r}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function v(e){const t=_(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},a.createElement(E,(0,r.Z)({},e,t)),a.createElement(g,(0,r.Z)({},e,t)))}function T(e){const t=(0,f.Z)();return a.createElement(v,(0,r.Z)({key:String(t)},e))}},62968:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>y,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905)),o=n(74866),l=n(85162);const i={id:"aws_codepipeline",title:"aws_codepipeline",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},c=void 0,s={unversionedId:"modules/aws/aws_codepipeline",id:"modules/aws/aws_codepipeline",title:"aws_codepipeline",description:"Tables",source:"@site/docs/modules/aws/aws_codepipeline.md",sourceDirName:"modules/aws",slug:"/modules/aws/aws_codepipeline",permalink:"/docs/next/modules/aws/aws_codepipeline",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"aws_codepipeline",title:"aws_codepipeline",hide_table_of_contents:!0,custom_edit_url:null,displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"aws_codedeploy",permalink:"/docs/next/modules/aws/aws_codedeploy"},next:{title:"aws_dynamo",permalink:"/docs/next/modules/aws/aws_dynamo"}},u={},p=[{value:"Tables",id:"tables",level:3},{value:"Enums",id:"enums",level:3}],d={toc:p},m="wrapper";function y(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(o.Z,{queryString:"view",mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"components",label:"Components",default:!0,mdxType:"TabItem"},(0,a.kt)("h3",{id:"tables"},"Tables"),(0,a.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,a.kt)("a",{parentName:"p",href:"../../aws/tables/aws_codepipeline_entity_pipeline_declaration.PipelineDeclaration"},"pipeline_declaration")),(0,a.kt)("h3",{id:"enums"},"Enums"),(0,a.kt)("p",null,"\xa0\xa0\xa0\xa0",(0,a.kt)("a",{parentName:"p",href:"../../aws/enums/aws_codepipeline_entity_pipeline_declaration.ActionCategory"},"action_category"))),(0,a.kt)(l.Z,{value:"code-examples",label:"Code examples",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("details",{open:"true"},(0,a.kt)("summary",{mdxType:"summary"},"Manage Codepipeline"),(0,a.kt)("codeblock",{language:"sql"},"--- installs the codepipeline module\nSELECT * FROM iasql_install('<modules>');\n--- adds a new role\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<codePipelineRoleName>', '<assumeServicePolicy>', array['<codepipelinePolicyArn>', '<s3PolicyArn>', '<codedeployPolicyArn>', '<globalIamPolicyArn>', '<cloudformationPolicyArn>']);\n--- adds a new role for lambda pipeline\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<codePipelineCfRoleName>', '<assumeServicePolicy>', array['<codepipelinePolicyArn>', '<s3PolicyArn>', '<codecommitPolicyArn>', '<codedeployPolicyArn>', '<globalIamPolicyArn>', '<cloudformationPolicyArn>']);\n--- adds a new role for cloudformation\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<cloudformationRoleName>', '<cloudformationRolePolicy>', array['<codedeployPolicyArn>', '<globalIamPolicyArn>', '<cloudformationPolicyArn>']);\n--- adds a new ec2 role\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<ec2RoleName>', '<ec2RolePolicy>', array['<deployEC2PolicyArn>', '<ssmPolicyArn>', '<codedeployPolicyArn>', '<s3PolicyArn>']);\n--- adds a new codedeploy role\nINSERT INTO iam_role (role_name, assume_role_policy_document, attached_policies_arns)\nVALUES ('<codeDeployRoleName>', '<codedeployRolePolicy>', array['<codedeployPolicyArn>', '<deployEC2PolicyArn>', '<s3PolicyArn>']);\n--- add storage s3 endpoint\nINSERT INTO bucket (name) VALUES ('<bucket>');\n--- add storage s3 endpoint for lambda\nINSERT INTO bucket (name) VALUES ('<testLambdaBucketName>');\n--- adds a new pipeline\nINSERT INTO pipeline_declaration (name, service_role_name, stages, artifact_store)\nSELECT '<prefix>-lambda-<dbAlias>', '<codePipelineCfRoleName>',\nCAST(REPLACE('<lambdaStages>', '##ROLE_ARN##', arn) AS json), '<artifactStore>' FROM iam_role WHERE role_name='<cloudformationRoleName>';\n--- check pipeline is created\nSELECT * FROM pipeline_declaration\nWHERE name = '<prefix>-lambda-<dbAlias>';\n--- adds a new security group\nINSERT INTO security_group (description, group_name)\nVALUES ('CodedeploySecurity Group', '<sgGroupName>');\n--- adds security group rules\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT false, 'tcp', 22, 22, '0.0.0.0/0', '<prefix>codedeploy_rule_ssh', id\nFROM security_group\nWHERE group_name = '<sgGroupName>';\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT false, 'tcp', 80, 80, '0.0.0.0/0', '<prefix>codedeploy_rule_http', id\nFROM security_group\nWHERE group_name = '<sgGroupName>';\nINSERT INTO security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT true, 'tcp', 1, 65335, '0.0.0.0/0', '<prefix>codedeploy_rule_egress', id\nFROM security_group\nWHERE group_name = '<sgGroupName>';\n--- adds a new codedeploy_application for deployment\nINSERT INTO codedeploy_application (name, compute_platform)\nVALUES ('<applicationNameForDeployment>', 'Server');\n--- adds a new deployment_group\nINSERT INTO codedeploy_deployment_group (application_id, name, role_name, ec2_tag_filters)\nVALUES ((SELECT id FROM codedeploy_application WHERE name = '<applicationNameForDeployment>'), '<deploymentGroupName>', '<codeDeployRoleName>', '<ec2FilterTags>');\n--- adds a new pipeline\nINSERT INTO pipeline_declaration (name, service_role_name, stages, artifact_store)\nVALUES ('<prefix>-<dbAlias>', '<codePipelineRoleName>', '<stages>', '<artifactStore>');\n--- check pipeline is created\nSELECT * FROM pipeline_declaration\nWHERE name = '<prefix>-<dbAlias>';\n--- delete pipeline\nDELETE FROM pipeline_declaration\nWHERE name IN ('<prefix>-<dbAlias>', '<prefix>-buggy-<dbAlias>', '<prefix>-lambda-<dbAlias>');\n--- delete deployment group\nDELETE FROM codedeploy_deployment_group\nWHERE name = '<deploymentGroupName>';\n--- delete application\nDELETE FROM codedeploy_application\nWHERE name = '<applicationNameForDeployment>';\n"))))))}y.isMDXComponent=!0}}]);