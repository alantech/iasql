"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[83447],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var o=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,o,r=function(e,t){if(null==e)return{};var a,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||n;return a?o.createElement(f,i(i({ref:t},p),{},{components:a})):o.createElement(f,i({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,i=new Array(n);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<n;c++)i[c]=a[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,a)}m.displayName="MDXCreateElement"},40924:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var o=a(87462),r=(a(67294),a(3905));const n={slug:"ecs-simplified",title:"Deploying to ECS, Simplified!",date:new Date("2023-02-13T00:00:00.000Z"),authors:["mtp1376"],tags:["tutorial"]},i=void 0,l={permalink:"/blog/ecs-simplified",editUrl:"https://github.com/alantech/iasql/tree/main/site/blog/tutorials/ecs-simplified.mdx",source:"@site/blog/tutorials/ecs-simplified.mdx",title:"Deploying to ECS, Simplified!",description:"IaSQL is an open-source software tool that creates a two-way connection between an unmodified PostgreSQL database and an AWS account so you can manage your infrastructure from a database. In this post, we're going to discover an IaSQL module that's built to make deploying to ECS, simplified. Most of the details for deploying a container to AWS ECS are the same (load balancers, security groups, IAM roles, etc), and we have created the awsecssimplified module for you so that you can give it any Github repo with a Dockerfile and get your app deployed to ECS in the fastest time possible, with scalability available! All the needed resources are going to be created automatically in your AWS account, and you'll have full access to the details while you're gaining the benefit of a higher-level simple deployment.",date:"2023-02-13T00:00:00.000Z",formattedDate:"February 13, 2023",tags:[{label:"tutorial",permalink:"/blog/tags/tutorial"}],readingTime:7.76,hasTruncateMarker:!0,authors:[{name:"Mohammad Teimori Pabandi",imageURL:"https://github.com/mtp1376.png",key:"mtp1376"}],frontMatter:{slug:"ecs-simplified",title:"Deploying to ECS, Simplified!",date:"2023-02-13T00:00:00.000Z",authors:["mtp1376"],tags:["tutorial"]},prevItem:{title:"Save on AWS by deleting untagged ECR images",permalink:"/blog/ecr-save"},nextItem:{title:"Deploy containerized app to Fargate (Django)",permalink:"/blog/django"}},s={authorsImageUrls:[void 0]},c=[],p={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,o.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"IaSQL is an ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/alantech/iasql"},"open-source")," software tool that creates a two-way connection between an unmodified PostgreSQL database and an AWS account so you can manage your infrastructure from a database. In this post, we're going to discover an ",(0,r.kt)("a",{parentName:"p",href:"docs/module"},"IaSQL module")," that's built to make deploying to ECS, simplified. Most of the details for deploying a container to AWS ECS are the same (load balancers, security groups, IAM roles, etc), and we have created the ",(0,r.kt)("inlineCode",{parentName:"p"},"aws_ecs_simplified")," module for you so that you can give it any Github repo with a ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," and get your app deployed to ECS in the fastest time possible, with scalability available! All the needed resources are going to be created automatically in your AWS account, and you'll have full access to the details while you're gaining the benefit of a higher-level simple deployment."))}d.isMDXComponent=!0}}]);