name: Clean-up AWS accounts

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch.
on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  module-cleanup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install dependencies
        run: yarn

      - name: Start local iasql engine
        run: |
          IASQL_ENV=ci docker-compose up --build --detach
          while ! curl --output /dev/null --silent --head --fail http://localhost:8088/health; do sleep 1 && echo -n .; done;

      - name: Create iasql database
        run: |
          echo "\nCreating an iasql db..."
          curl http://localhost:8088/v1/db/connect/iasql

      - name: Set up iasql database
        run: |
          echo "\nInstalling aws_account..."
          psql postgres://postgres:test@localhost:5432/iasql -c "
            select iasql_install(
              'aws_account'
            );
          ";
          echo "\Attaching credentials..."
          psql postgres://postgres:test@localhost:5432/iasql -c "
            INSERT INTO aws_account (region, access_key_id, secret_access_key)
            VALUES ('${AWS_REGION}', '${AWS_ACCESS_KEY_ID}', '${AWS_SECRET_ACCESS_KEY}');
          ";
          echo "\Install all modules..."
          psql postgres://postgres:test@localhost:5432/iasql -c "
            select iasql_module_install(
              array(select module_name from iasql_modules_list() where module_name != 'aws_account' and module_name not like 'iasql_%')
            );
          ";
        env:
          AWS_REGION: ${{ inputs.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Run cleaning script
        run: |
          echo "\nDelete all records..."
          psql postgres://postgres:test@localhost:5432/iasql -f test/sql/delete_records.sql -c "select * from iasql_apply();"

      - name: Local engine logs
        if: always()
        run: docker logs iasql-engine_change_engine_1

      - name: Local psql logs
        if: always()
        run: docker logs iasql-engine_postgresql_1

      # - name: Run modules tests
      #   run: yarn coverage $(echo $MODULES | jq -r '."${{matrix.module}}"')
      #   env:
      #     IASQL_ENV: test
      #     MODULES: ${{ needs.setup-module-cleanup.outputs['test-modules'] }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets[env.MATRIX_AWS_ACCESS_KEY_ID] }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets[env.MATRIX_AWS_SECRET_ACCESS_KEY] }}
      #     AWS_REGION: ${{ matrix.region }}

  # notify:
  #     name: Discord Notification
  #     runs-on: ubuntu-latest
  #     needs: # make sure the notification is sent AFTER the jobs you want included have completed
  #       - deploy
  #     if: ${{ always() }} # You always want to be notified: success, failure, or cancelled

  #     steps:
  #       - name: Notify
  #         uses: nobrayner/discord-webhook@v1
  #         with:
  #           github-token: ${{ secrets.github_token }}
  #           discord-webhook: ${{ secrets.DISCORD_WEBHOOK }