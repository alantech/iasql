name: Clean-up AWS accounts

# Reusable workflow
on:
  workflow_call:
    inputs:
      account_ids:
        required: true
        type: string
      regions:
        required: true
        type: string
      global:
        required: true
        type: boolean

jobs:
  module-cleanup:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    name: ${{ matrix.region }} Account ${{ matrix.account }}
    strategy:
      fail-fast: false
      matrix:
        account: ${{ fromJson(inputs.account_ids) }}
        region: ${{ fromJson(inputs.regions) }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install dependencies
        run: yarn

      - name: Start local iasql engine
        run: |
          IASQL_ENV=ci docker-compose up --build --detach
          while ! curl --output /dev/null --silent --head --fail http://localhost:8088/health; do sleep 1 && echo -n .; done

      - name: Create database
        run: |
          echo "\nCreating iasql db..."
          curl http://localhost:8088/v1/db/connect/iasql

      - name: Set up iasql database
        run: |
          export AWS_ACCESS_KEY_ID=$(echo "${ACCESS_KEY_IDS}" | jq -r ".[${ACCOUNT_INDEX}]")
          export AWS_SECRET_ACCESS_KEY=$(echo "${SECRET_ACCESS_KEYS}" | jq -r ".[${ACCOUNT_INDEX}]")
          echo "\nInstalling aws_account..."
          psql postgres://postgres:test@localhost:5432/iasql -c "
            select iasql_install(
              'aws_account'
            );
          ";
          echo "\Attaching credentials..."
          psql postgres://postgres:test@localhost:5432/iasql -c "
            INSERT INTO aws_account (region, access_key_id, secret_access_key)
            VALUES ('${AWS_REGION}', '${AWS_ACCESS_KEY_ID}', '${AWS_SECRET_ACCESS_KEY}');
          ";
          echo "\Install all modules..."
          psql postgres://postgres:test@localhost:5432/iasql -c "
            select iasql_install(
              variadic array(select module_name from iasql_modules_list() where module_name != 'aws_account' and module_name not like 'iasql_%')
            );
          ";
        env:
          ACCOUNT_INDEX: ${{ matrix.account }}
          AWS_REGION: ${{ matrix.region }}
          ACCESS_KEY_IDS: ${{ secrets.ACCESS_KEY_IDS }}
          SECRET_ACCESS_KEYS: ${{ secrets.SECRET_ACCESS_KEYS }}

      - name: Run cleaning script
        if: ${{ !inputs.global }}
        run: |
          echo "\nDelete all records..."
          psql postgres://postgres:test@localhost:5432/iasql -f test/sql/delete_records.sql -c "select * from iasql_apply();"

      - name: Run cleaning script global
        if: ${{ inputs.global }}
        run: |
          echo "\nDelete all records..."
          psql postgres://postgres:test@localhost:5432/iasql -f test/sql/delete_global_records.sql -c "select * from iasql_apply();"

      - name: Local engine logs
        if: always()
        run: docker logs iasql-engine_change_engine_1

      - name: Local psql logs
        if: always()
        run: docker logs iasql-engine_postgresql_1
