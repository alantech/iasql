# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [main, rand-region]
  # TODO: RESTORE
  # pull_request:
  #   branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up Node.js
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install dependencies
        run: yarn

      - name: Run linter check
        run: yarn lint

  common-test:
    runs-on: ubuntu-latest
    name: common tests
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install dependencies
        run: yarn

      - name: Run common tests
        run: yarn coverage **/common/*
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_TESTING }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_TESTING }}
          IRONPLANS_TOKEN: ${{ secrets.IRONPLANS_TOKEN }}
          AWS_REGION: us-east-1
          DB_HOST: localhost

  setup-module-test:
    runs-on: ubuntu-latest
    outputs:
      test-modules: ${{ steps['set-test-modules'].outputs['test-modules'] }}
      set-test-module-names: ${{ steps['set-test-module-names'].outputs['test-module-names'] }}
      region: ${{ steps['set-region'].outputs['region'] }}
    steps:
      - uses: actions/checkout@v2
      - run: yarn
      - id: set-test-modules
        name: Set modules tests
        run: >
          echo "::set-output name=test-modules::$(npx jest **/modules/* --listTests --json | jq -c 'map({(. | split("/") | .[-1] | split(".") | .[0] | gsub( "-"; "_") | ascii_upcase | tostring): .}) | add')"
      - id: set-test-module-names
        name: Set modules tests names
        run: echo "::set-output name=test-module-names::$(npx jest **/modules/* --listTests --json | jq -c 'map(split("/") | .[-1] | split(".") | .[0] | gsub( "-"; "_") | ascii_upcase | tostring)')"
      - id: set-region
        name: Set region
        # All regions except us-east-1 to not collide with common tests
        run: |
          regions=("ap-northeast-1" "ap-northeast-2" "ap-northeast-3" "ap-south-1" "ap-southeast-1" "ap-southeast-2" "ca-central-1" "eu-central-1" "eu-north-1" "eu-west-1" "eu-west-2" "eu-west-3" "sa-east-1" "us-east-2" "us-west-1" "us-west-2")
          regionslen=${#regions[@]}
          index=$(($RANDOM % $regionslen))
          echo "::set-output name=region::$(echo ${regions[$index]})"

  module-test:
    runs-on: ubuntu-latest
    needs:
      - setup-module-test
    name: module test ${{ matrix.module }}
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJson(needs.setup-module-test.outputs['set-test-module-names']) }}

    env:
      MATRIX_AWS_ACCESS_KEY_ID: AWS_ACCESS_KEY_ID_${{matrix.module}}
      MATRIX_AWS_SECRET_ACCESS_KEY: AWS_SECRET_ACCESS_KEY_${{matrix.module}}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install dependencies
        run: yarn

      - name: Run modules tests
        run: yarn coverage $(echo $MODULES | jq -r '."${{matrix.module}}"')
        env:
          MODULES: ${{ needs.setup-module-test.outputs['test-modules'] }}
          AWS_ACCESS_KEY_ID: ${{ secrets[env.MATRIX_AWS_ACCESS_KEY_ID] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[env.MATRIX_AWS_SECRET_ACCESS_KEY] }}
          IRONPLANS_TOKEN: ${{ secrets.IRONPLANS_TOKEN }}
          AWS_REGION: ${{ needs.setup-module-test.outputs['region'] }}
          DB_HOST: localhost