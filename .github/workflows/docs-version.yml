name: Docs Release

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    version:
      description: 'Docs version to release'
    inputs:
      version:
        required: false
        description: 'Version to update the docs to'
  repository_dispatch:
    types: [release]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  new-version:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        uses: actions/checkout@v3
      # Node is required for npm
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      # Install and build Docusaurus website
      - name: Build Docusaurus website
        run: |
          yarn
          cd site
          yarn 
          yarn build
      # https://docusaurus.io/docs/versioning#tagging-a-new-version
      - name: Tag a new version, drop the old, commit the changes and push
        run: |
          cd site
          export OLDVERSION=(jq '.[0]' site/versions.json)
          echo '[]' >> site/versions.json
          git rm -r site/versioned_docs/version-${OLDVERSION}
          git rm site/versioned_sidebars/version-${OLDVERSION}-sidebars.json
          export VERSION=(${{ github.event.client_payload.version }} ${{ github.event.client_payload.message.version }} ${{ github.event.inputs.version }})
          yarn run docusaurus docs:version $VERSION
          git config --local user.email "iasql-bot@users.noreply.github.com"
          git config --local user.name "iasql-bot"
          git add -A
          git commit -m "$VERSION"
          git push

  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - new-version
    if: ${{ always() }} # You always want to be notified: success, failure, or cancelled

    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}