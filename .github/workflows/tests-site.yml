# This is a basic workflow to help you get started with Actions

name: Site Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [main, os-test]
    paths: ['site/**', '.github/workflows/tests-site.yml']
  pull_request:
    branches: [main]
    paths: ['site/**', '.github/workflows/tests-site.yml']

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - name: Check out repo
  #       uses: actions/checkout@v3
  #     # Node is required for npm
  #     - name: Set up Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'
  #     # Install and build Docusaurus website
  #     - name: Build Docusaurus website
  #       run: |
  #         yarn
  #         cd site
  #         yarn
  #         yarn build
  #     - name: Returns true if the site has been generated
  #       run: |
  #         [ -d "./site/docs/reference" ]
  
  run-container-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Start local iasql engine
        run: |
          docker build -t iasql:latest .
          docker run -p 5432:5432 -e IASQL_ENV=local --name iasql iasql:latest &
          while ! psql postgres://postgres:test@localhost:5432/iasql_metadata -b -q -c "SELECT iasql_engine_health()"; do sleep 1 && echo -n .; done;

  run-container-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Start local iasql engine
        shell: bash
        run: |
          docker build -t iasql:latest .
          docker run -p 5432:5432 -e IASQL_ENV=local --name iasql iasql:latest &
          while ! psql postgres://postgres:test@localhost:5432/iasql_metadata -b -q -c "SELECT iasql_engine_health()"; do sleep 1 && echo -n .; done;

  run-container-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install docker
        run: |
          brew install docker
          # https://github.com/abiosoft/colima
          colima start

      - name: Start local iasql engine
        run: |
          docker build -t iasql:latest .
          docker run -p 5432:5432 -e IASQL_ENV=local --name iasql iasql:latest &
          while ! psql postgres://postgres:test@localhost:5432/iasql_metadata -b -q -c "SELECT iasql_engine_health()"; do sleep 1 && echo -n .; done;

  run-container-macos-arm:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install docker
        run: |
          brew install docker
          # https://github.com/abiosoft/colima
          colima start --arch aarch64

      - name: Start local iasql engine
        run: |
          docker build -t iasql:latest .
          docker run -p 5432:5432 -e IASQL_ENV=local --name iasql iasql:latest &
          while ! psql postgres://postgres:test@localhost:5432/iasql_metadata -b -q -c "SELECT iasql_engine_health()"; do sleep 1 && echo -n .; done;
