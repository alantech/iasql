import {MigrationInterface, QueryRunner} from "typeorm";

export class regionChange1632353598131 implements MigrationInterface {
    name = 'regionChange1632353598131'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP CONSTRAINT "FK_5f2a13e51f628eda360ec314cb1"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP CONSTRAINT "FK_51cbdd2c81bd2ab1a3b5fdab511"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP CONSTRAINT "FK_9becf576d9da01547c5ed95f5f9"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP CONSTRAINT "FK_b39944b2aae318467ceb02ec1b2"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP CONSTRAINT "FK_4b92e6487f752a1a55b6184643c"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP CONSTRAINT "FK_51558a61311eebe1a4e25eb230f"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP CONSTRAINT "FK_2b12a15c05cc37e279554f5ce7c"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP CONSTRAINT "FK_f26504b23aa1d0966aedaefa802"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP CONSTRAINT "FK_f1a740c375af691f8fd47908cf1"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP CONSTRAINT "FK_efc682159731f5f8bd2b776ab63"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP CONSTRAINT "FK_7b8582e2b009b8c08e972e95255"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP CONSTRAINT "FK_71b952e068cb2458c680b0ea73a"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP CONSTRAINT "FK_a01d9a1f69047f90898bbc75487"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP CONSTRAINT "FK_b822f14e8c5d226905e0a1373ec"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP CONSTRAINT "FK_38e3395028d80a8e5a422287dbe"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP CONSTRAINT "FK_9c33046e851961c6f9a131aeb63"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP CONSTRAINT "FK_df2384ed345ea02b46055287780"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP CONSTRAINT "FK_a9706401551c7ca9fa91d3f47b0"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP CONSTRAINT "FK_61c1342b3f5ea1eed2a925918ba"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP CONSTRAINT "FK_528f6ad79fa40bed258063306f1"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP CONSTRAINT "FK_7627cd35b944da31aa7b70f6473"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP CONSTRAINT "FK_6bfcecb8b3e69646c70f259cc71"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP CONSTRAINT "FK_19bde7851ddb55c88d9f83e6b5e"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP CONSTRAINT "FK_ac3a3f74934b0e90a077d2ab5d3"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP CONSTRAINT "FK_ee864286f0efb1f01030c9dc757"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP CONSTRAINT "FK_1dad445b95c880dc668fd01ceb3"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP CONSTRAINT "FK_912b11c90cb1561261c71cd5dc5"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP CONSTRAINT "FK_bd4dfa196aae7012c6987887899"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP CONSTRAINT "FK_3882f8bb56e24d9ed43d1c4c249"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP CONSTRAINT "FK_f7db3c32e781541f328f0502fa6"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP CONSTRAINT "FK_63d531a5057bf5bf18cac8a2f28"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP CONSTRAINT "FK_d5e1e0258e6532899c373cf7276"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP CONSTRAINT "FK_9f19bef18ebbdb2ddef5bc4fc9c"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP CONSTRAINT "FK_e147c1d39dd8092fc3052a3454c"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP CONSTRAINT "FK_e8b593dfecd89b40b47bcb9e92c"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP CONSTRAINT "FK_ddceea37cc8e3a55c25cd183f1c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5f2a13e51f628eda360ec314cb"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_51cbdd2c81bd2ab1a3b5fdab51"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b39944b2aae318467ceb02ec1b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9becf576d9da01547c5ed95f5f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4b92e6487f752a1a55b6184643"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_51558a61311eebe1a4e25eb230"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2b12a15c05cc37e279554f5ce7"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f26504b23aa1d0966aedaefa80"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_efc682159731f5f8bd2b776ab6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f1a740c375af691f8fd47908cf"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_71b952e068cb2458c680b0ea73"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7b8582e2b009b8c08e972e9525"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a01d9a1f69047f90898bbc7548"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b822f14e8c5d226905e0a1373e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_38e3395028d80a8e5a422287db"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9c33046e851961c6f9a131aeb6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_df2384ed345ea02b4605528778"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a9706401551c7ca9fa91d3f47b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_61c1342b3f5ea1eed2a925918b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_528f6ad79fa40bed258063306f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7627cd35b944da31aa7b70f647"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_6bfcecb8b3e69646c70f259cc7"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_19bde7851ddb55c88d9f83e6b5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ac3a3f74934b0e90a077d2ab5d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ee864286f0efb1f01030c9dc75"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1dad445b95c880dc668fd01ceb"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_912b11c90cb1561261c71cd5dc"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_bd4dfa196aae7012c698788789"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3882f8bb56e24d9ed43d1c4c24"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f7db3c32e781541f328f0502fa"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_63d531a5057bf5bf18cac8a2f2"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d5e1e0258e6532899c373cf727"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e147c1d39dd8092fc3052a3454"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9f19bef18ebbdb2ddef5bc4fc9"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ddceea37cc8e3a55c25cd183f1"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e8b593dfecd89b40b47bcb9e92"`);
        await queryRunner.query(`ALTER TABLE "public"."cpu_architecture" RENAME COLUMN "cpuArchitecture" TO "cpu_architecture"`);
        await queryRunner.query(`ALTER TABLE "public"."cpu_architecture" RENAME CONSTRAINT "UQ_4bc685244b74099f073c42ad735" TO "UQ_7a43b53cf9f82afd0f7a426fed9"`);
        await queryRunner.query(`ALTER TABLE "public"."device_type" RENAME COLUMN "deviceType" TO "device_type"`);
        await queryRunner.query(`ALTER TABLE "public"."device_type" RENAME CONSTRAINT "UQ_e7709b043396305fcfb252a1972" TO "UQ_c49ce8ef8706f45c5650b2ed6ba"`);
        await queryRunner.query(`ALTER TABLE "public"."disk_info" RENAME COLUMN "sizeInGB" TO "size_in_gb"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_device_memory_info" RENAME COLUMN "sizeInMiB" TO "size_in_mi_b"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info" RENAME COLUMN "totalFPGAMemoryInMiB" TO "total_fpga_memory_in_mi_b"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_device_memory_info" RENAME COLUMN "sizeInMiB" TO "size_in_mi_b"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info" RENAME COLUMN "totalGPUMemoryInMiB" TO "total_gpu_memory_in_mi_b"`);
        await queryRunner.query(`ALTER TABLE "public"."efa_info" RENAME COLUMN "maximumEFAInterfaces" TO "maximum_efa_interfaces"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info" RENAME COLUMN "sustainedClockSpeedInGHz" TO "sustained_clock_speed_in_g_hz"`);
        await queryRunner.query(`ALTER TABLE "public"."usage_class" RENAME COLUMN "usageClass" TO "usage_class"`);
        await queryRunner.query(`ALTER TABLE "public"."usage_class" RENAME CONSTRAINT "UQ_6c0d453f3dda037c94190ff4ef6" TO "UQ_330c813861b91da5119a46f4727"`);
        await queryRunner.query(`ALTER TABLE "public"."virtualization_type" RENAME COLUMN "virtualizationType" TO "virtualization_type"`);
        await queryRunner.query(`ALTER TABLE "public"."virtualization_type" RENAME CONSTRAINT "UQ_181f2e7a0b47a335442cc945df2" TO "UQ_0d05e6087e782c5a437b40d8d2b"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "deleteOnTermination"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "volumeSize"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "volumeType"`);
        await queryRunner.query(`DROP TYPE "public"."ebs_block_device_type_volumetype_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "snapshotId"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "kmsKeyId"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "outpostArn"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" DROP COLUMN "deviceName"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" DROP COLUMN "virtualName"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" DROP COLUMN "noDevice"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "creationDate"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "imageType"`);
        await queryRunner.query(`DROP TYPE "public"."ami_imagetype_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "enaSupport"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "rootDeviceType"`);
        await queryRunner.query(`DROP TYPE "public"."ami_rootdevicetype_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "deprecationTime"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "imageOwnerAlias"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "rootDeviceName"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "sirovNetSupport"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "imageId"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "imageLocation"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "kernelId"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "ownerId"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "platformDetails"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "usageOperation"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "ramdiskId"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "baselineBandwidthInMbps"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "baselineThroughputInMBps"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "baselineIOPS"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "maximumBandwidthInMbps"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "maximumThroughputInMBps"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "maximumIOPS"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info" DROP COLUMN "totalSizeInGB"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info" DROP COLUMN "NVMESupport"`);
        await queryRunner.query(`DROP TYPE "public"."instance_storage_info_nvmesupport_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" DROP COLUMN "ebsOptimizedSupport"`);
        await queryRunner.query(`DROP TYPE "public"."ebs_info_ebsoptimizedsupport_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" DROP COLUMN "encryptionSupport"`);
        await queryRunner.query(`DROP TYPE "public"."ebs_info_encryptionsupport_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" DROP COLUMN "NVMESupport"`);
        await queryRunner.query(`DROP TYPE "public"."ebs_info_nvmesupport_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" DROP COLUMN "networkCardIndex"`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" DROP COLUMN "maximumNetworkInterfaces"`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" DROP COLUMN "networkPerformance"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "maximumNetworkInterfaces"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "maximumNetworkCards"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "defaultNetworkCardIndex"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "ipv4AddressesPerInterface"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "ipv6AddressesPerInterface"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "ipv6Supported"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "enaSupport"`);
        await queryRunner.query(`DROP TYPE "public"."network_info_enasupport_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "efaSupported"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "encryptionInTransitSupported"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "networkPerformance"`);
        await queryRunner.query(`ALTER TABLE "public"."region" DROP COLUMN "optInStatus"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" DROP COLUMN "defaultVCPUs"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" DROP COLUMN "defaultCores"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" DROP COLUMN "defaultThreadsPerCore"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "instanceType"`);
        await queryRunner.query(`DROP TYPE "public"."instance_type_instancetype_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "currentGeneration"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "freeTierEligible"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "bareMetal"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "memorySizeInMiB"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "instanceStorageSupported"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "hibernationSupported"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "burstablePerformanceSupported"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "dedicatedHostsSupported"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "autoRecoverySupported"`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" DROP COLUMN "optInStatus"`);
        await queryRunner.query(`DROP TYPE "public"."availability_zone_optinstatus_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" DROP COLUMN "zoneId"`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" DROP COLUMN "zoneName"`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" DROP COLUMN "groupName"`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" DROP COLUMN "networkBorderGroup"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP CONSTRAINT "PK_7ac1bd18001abba04d94cde3c40"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD CONSTRAINT "PK_51cbdd2c81bd2ab1a3b5fdab511" PRIMARY KEY ("productCodeId")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP COLUMN "amiId"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP CONSTRAINT "PK_51cbdd2c81bd2ab1a3b5fdab511"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP COLUMN "productCodeId"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP CONSTRAINT "PK_04b3f6068ea22925c8185799c6e"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD CONSTRAINT "PK_9becf576d9da01547c5ed95f5f9" PRIMARY KEY ("ebsBlockDeviceMappingId")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP COLUMN "amiId"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP CONSTRAINT "PK_9becf576d9da01547c5ed95f5f9"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP COLUMN "ebsBlockDeviceMappingId"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP CONSTRAINT "PK_583e55e561937fdfee14c4f5e3f"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD CONSTRAINT "PK_51558a61311eebe1a4e25eb230f" PRIMARY KEY ("tagId")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP COLUMN "amiId"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP CONSTRAINT "PK_51558a61311eebe1a4e25eb230f"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP COLUMN "tagId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP CONSTRAINT "PK_c6192c7134ac83bca4a6252347e"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD CONSTRAINT "PK_f26504b23aa1d0966aedaefa802" PRIMARY KEY ("diskInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP COLUMN "instanceStorageInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP CONSTRAINT "PK_f26504b23aa1d0966aedaefa802"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP COLUMN "diskInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP CONSTRAINT "PK_9ac3610d2862b2d49a97c550ad9"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD CONSTRAINT "PK_f1a740c375af691f8fd47908cf1" PRIMARY KEY ("fpgaDeviceInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP COLUMN "fpgaInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP CONSTRAINT "PK_f1a740c375af691f8fd47908cf1"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP COLUMN "fpgaDeviceInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP CONSTRAINT "PK_a23133f581833ea97180c0ed4e9"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD CONSTRAINT "PK_7b8582e2b009b8c08e972e95255" PRIMARY KEY ("gpuDeviceInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP COLUMN "gpuInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP CONSTRAINT "PK_7b8582e2b009b8c08e972e95255"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP COLUMN "gpuDeviceInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP CONSTRAINT "PK_e19819ea40480a5492da8f87f4f"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD CONSTRAINT "PK_b822f14e8c5d226905e0a1373ec" PRIMARY KEY ("inferenceDeviceInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP COLUMN "inferenceAcceleratorInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP CONSTRAINT "PK_b822f14e8c5d226905e0a1373ec"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP COLUMN "inferenceDeviceInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP CONSTRAINT "PK_0e1fe86a5451cb49891062f83ec"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD CONSTRAINT "PK_9c33046e851961c6f9a131aeb63" PRIMARY KEY ("networkCardInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP COLUMN "networkInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP CONSTRAINT "PK_9c33046e851961c6f9a131aeb63"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP COLUMN "networkCardInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP CONSTRAINT "PK_5aa3969c938d027fdfc7222bbff"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD CONSTRAINT "PK_a9706401551c7ca9fa91d3f47b0" PRIMARY KEY ("placementGroupStrategyId")`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP COLUMN "placementGroupInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP CONSTRAINT "PK_a9706401551c7ca9fa91d3f47b0"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP COLUMN "placementGroupStrategyId"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP CONSTRAINT "PK_0b2cca4531082f0b9f1eaf29ad3"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD CONSTRAINT "PK_528f6ad79fa40bed258063306f1" PRIMARY KEY ("cpuArchitectureId")`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP COLUMN "processorInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP CONSTRAINT "PK_528f6ad79fa40bed258063306f1"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP COLUMN "cpuArchitectureId"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP CONSTRAINT "PK_11f0bc450e1429705338e1131a3"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD CONSTRAINT "PK_6bfcecb8b3e69646c70f259cc71" PRIMARY KEY ("validCoreId")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP COLUMN "vcpuInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP CONSTRAINT "PK_6bfcecb8b3e69646c70f259cc71"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP COLUMN "validCoreId"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP CONSTRAINT "PK_5a6cca75fc8bbadf1d058432345"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD CONSTRAINT "PK_ac3a3f74934b0e90a077d2ab5d3" PRIMARY KEY ("validThreadsPerCoreId")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP COLUMN "vcpuInfoId"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP CONSTRAINT "PK_ac3a3f74934b0e90a077d2ab5d3"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP COLUMN "validThreadsPerCoreId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP CONSTRAINT "PK_5352f60d5e6abb127f880ff48bc"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD CONSTRAINT "PK_1dad445b95c880dc668fd01ceb3" PRIMARY KEY ("usageClassId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP COLUMN "instanceTypeId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP CONSTRAINT "PK_1dad445b95c880dc668fd01ceb3"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP COLUMN "usageClassId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP CONSTRAINT "PK_05e7ecf05ab06569e23eb8793f2"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD CONSTRAINT "PK_bd4dfa196aae7012c6987887899" PRIMARY KEY ("deviceTypeId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP COLUMN "instanceTypeId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP CONSTRAINT "PK_bd4dfa196aae7012c6987887899"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP COLUMN "deviceTypeId"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP CONSTRAINT "PK_3ce588be477c139ddbbfca8ec44"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD CONSTRAINT "PK_f7db3c32e781541f328f0502fa6" PRIMARY KEY ("virtualizationTypeId")`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP COLUMN "instanceTypeId"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP CONSTRAINT "PK_f7db3c32e781541f328f0502fa6"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP COLUMN "virtualizationTypeId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP CONSTRAINT "PK_26f9380b908e7b57aaebdae947c"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD CONSTRAINT "PK_d5e1e0258e6532899c373cf7276" PRIMARY KEY ("bootModeId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP COLUMN "instanceTypeId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP CONSTRAINT "PK_d5e1e0258e6532899c373cf7276"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP COLUMN "bootModeId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP CONSTRAINT "PK_0e31dd069fa70a55dc63e0ad803"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD CONSTRAINT "PK_9f19bef18ebbdb2ddef5bc4fc9c" PRIMARY KEY ("regionId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP COLUMN "instanceTypeId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP CONSTRAINT "PK_9f19bef18ebbdb2ddef5bc4fc9c"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP COLUMN "regionId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP CONSTRAINT "PK_985d6b2c9545a5d8101f95ba2dd"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD CONSTRAINT "PK_ddceea37cc8e3a55c25cd183f1c" PRIMARY KEY ("instanceTypeId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP COLUMN "availabilityZoneId"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP CONSTRAINT "PK_ddceea37cc8e3a55c25cd183f1c"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP COLUMN "instanceTypeId"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "delete_on_termination" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "snapshot_id" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "volume_size" integer NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ebs_block_device_type_volume_type_enum" AS ENUM('gp2', 'gp3', 'io1', 'io2', 'sc1', 'st1', 'standard')`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "volume_type" "public"."ebs_block_device_type_volume_type_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "kms_key_id" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "outpost_arn" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" ADD "device_name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" ADD "virtual_name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" ADD "no_device" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "creation_date" TIMESTAMP WITH TIME ZONE NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "image_id" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "image_location" character varying NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ami_image_type_enum" AS ENUM('kernel', 'machine', 'ramdisk')`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "image_type" "public"."ami_image_type_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "kernel_id" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "owner_id" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "platform_details" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "usage_operation" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "ramdisk_id" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "ena_support" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "image_owner_alias" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "root_device_name" character varying NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ami_root_device_type_enum" AS ENUM('ebs', 'instance-store')`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "root_device_type" "public"."ami_root_device_type_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "sirov_net_support" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "deprecation_time" TIMESTAMP WITH TIME ZONE NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "baseline_bandwidth_in_mbps" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "baseline_throughput_in_m_bps" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "baseline_iops" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "maximum_bandwidth_in_mbps" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "maximum_throughput_in_m_bps" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "maximum_iops" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info" ADD "total_size_in_gb" numeric NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."instance_storage_info_nvme_support_enum" AS ENUM('required', 'supported', 'unsupported')`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info" ADD "nvme_support" "public"."instance_storage_info_nvme_support_enum" NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ebs_info_ebs_optimized_support_enum" AS ENUM('default', 'supported', 'unsupported')`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" ADD "ebs_optimized_support" "public"."ebs_info_ebs_optimized_support_enum" NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ebs_info_encryption_support_enum" AS ENUM('supported', 'unsupported')`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" ADD "encryption_support" "public"."ebs_info_encryption_support_enum" NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ebs_info_nvme_support_enum" AS ENUM('required', 'supported', 'unsupported')`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" ADD "nvme_support" "public"."ebs_info_nvme_support_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" ADD "network_card_index" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" ADD "network_performance" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" ADD "maximum_network_interfaces" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "network_performance" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "maximum_network_interfaces" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "maximum_network_cards" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "default_network_card_index" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "ipv4addresses_per_interface" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "ipv6addresses_per_interface" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "ipv6supported" boolean NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."network_info_ena_support_enum" AS ENUM('required', 'supported', 'unsupported')`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "ena_support" "public"."network_info_ena_support_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "efa_supported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "encryption_in_transit_supported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."region" ADD "opt_in_status" character varying`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" ADD "default_vcp_us" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" ADD "default_cores" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" ADD "default_threads_per_core" integer NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."instance_type_instance_type_enum" AS ENUM('a1.2xlarge', 'a1.4xlarge', 'a1.large', 'a1.medium', 'a1.metal', 'a1.xlarge', 'c1.medium', 'c1.xlarge', 'c3.2xlarge', 'c3.4xlarge', 'c3.8xlarge', 'c3.large', 'c3.xlarge', 'c4.2xlarge', 'c4.4xlarge', 'c4.8xlarge', 'c4.large', 'c4.xlarge', 'c5.12xlarge', 'c5.18xlarge', 'c5.24xlarge', 'c5.2xlarge', 'c5.4xlarge', 'c5.9xlarge', 'c5.large', 'c5.metal', 'c5.xlarge', 'c5a.12xlarge', 'c5a.16xlarge', 'c5a.24xlarge', 'c5a.2xlarge', 'c5a.4xlarge', 'c5a.8xlarge', 'c5a.large', 'c5a.xlarge', 'c5ad.12xlarge', 'c5ad.16xlarge', 'c5ad.24xlarge', 'c5ad.2xlarge', 'c5ad.4xlarge', 'c5ad.8xlarge', 'c5ad.large', 'c5ad.xlarge', 'c5d.12xlarge', 'c5d.18xlarge', 'c5d.24xlarge', 'c5d.2xlarge', 'c5d.4xlarge', 'c5d.9xlarge', 'c5d.large', 'c5d.metal', 'c5d.xlarge', 'c5n.18xlarge', 'c5n.2xlarge', 'c5n.4xlarge', 'c5n.9xlarge', 'c5n.large', 'c5n.metal', 'c5n.xlarge', 'c6g.12xlarge', 'c6g.16xlarge', 'c6g.2xlarge', 'c6g.4xlarge', 'c6g.8xlarge', 'c6g.large', 'c6g.medium', 'c6g.metal', 'c6g.xlarge', 'c6gd.12xlarge', 'c6gd.16xlarge', 'c6gd.2xlarge', 'c6gd.4xlarge', 'c6gd.8xlarge', 'c6gd.large', 'c6gd.medium', 'c6gd.metal', 'c6gd.xlarge', 'c6gn.12xlarge', 'c6gn.16xlarge', 'c6gn.2xlarge', 'c6gn.4xlarge', 'c6gn.8xlarge', 'c6gn.large', 'c6gn.medium', 'c6gn.xlarge', 'cc1.4xlarge', 'cc2.8xlarge', 'cg1.4xlarge', 'cr1.8xlarge', 'd2.2xlarge', 'd2.4xlarge', 'd2.8xlarge', 'd2.xlarge', 'd3.2xlarge', 'd3.4xlarge', 'd3.8xlarge', 'd3.xlarge', 'd3en.12xlarge', 'd3en.2xlarge', 'd3en.4xlarge', 'd3en.6xlarge', 'd3en.8xlarge', 'd3en.xlarge', 'f1.16xlarge', 'f1.2xlarge', 'f1.4xlarge', 'g2.2xlarge', 'g2.8xlarge', 'g3.16xlarge', 'g3.4xlarge', 'g3.8xlarge', 'g3s.xlarge', 'g4ad.16xlarge', 'g4ad.2xlarge', 'g4ad.4xlarge', 'g4ad.8xlarge', 'g4ad.xlarge', 'g4dn.12xlarge', 'g4dn.16xlarge', 'g4dn.2xlarge', 'g4dn.4xlarge', 'g4dn.8xlarge', 'g4dn.metal', 'g4dn.xlarge', 'h1.16xlarge', 'h1.2xlarge', 'h1.4xlarge', 'h1.8xlarge', 'hi1.4xlarge', 'hs1.8xlarge', 'i2.2xlarge', 'i2.4xlarge', 'i2.8xlarge', 'i2.xlarge', 'i3.16xlarge', 'i3.2xlarge', 'i3.4xlarge', 'i3.8xlarge', 'i3.large', 'i3.metal', 'i3.xlarge', 'i3en.12xlarge', 'i3en.24xlarge', 'i3en.2xlarge', 'i3en.3xlarge', 'i3en.6xlarge', 'i3en.large', 'i3en.metal', 'i3en.xlarge', 'inf1.24xlarge', 'inf1.2xlarge', 'inf1.6xlarge', 'inf1.xlarge', 'm1.large', 'm1.medium', 'm1.small', 'm1.xlarge', 'm2.2xlarge', 'm2.4xlarge', 'm2.xlarge', 'm3.2xlarge', 'm3.large', 'm3.medium', 'm3.xlarge', 'm4.10xlarge', 'm4.16xlarge', 'm4.2xlarge', 'm4.4xlarge', 'm4.large', 'm4.xlarge', 'm5.12xlarge', 'm5.16xlarge', 'm5.24xlarge', 'm5.2xlarge', 'm5.4xlarge', 'm5.8xlarge', 'm5.large', 'm5.metal', 'm5.xlarge', 'm5a.12xlarge', 'm5a.16xlarge', 'm5a.24xlarge', 'm5a.2xlarge', 'm5a.4xlarge', 'm5a.8xlarge', 'm5a.large', 'm5a.xlarge', 'm5ad.12xlarge', 'm5ad.16xlarge', 'm5ad.24xlarge', 'm5ad.2xlarge', 'm5ad.4xlarge', 'm5ad.8xlarge', 'm5ad.large', 'm5ad.xlarge', 'm5d.12xlarge', 'm5d.16xlarge', 'm5d.24xlarge', 'm5d.2xlarge', 'm5d.4xlarge', 'm5d.8xlarge', 'm5d.large', 'm5d.metal', 'm5d.xlarge', 'm5dn.12xlarge', 'm5dn.16xlarge', 'm5dn.24xlarge', 'm5dn.2xlarge', 'm5dn.4xlarge', 'm5dn.8xlarge', 'm5dn.large', 'm5dn.metal', 'm5dn.xlarge', 'm5n.12xlarge', 'm5n.16xlarge', 'm5n.24xlarge', 'm5n.2xlarge', 'm5n.4xlarge', 'm5n.8xlarge', 'm5n.large', 'm5n.metal', 'm5n.xlarge', 'm5zn.12xlarge', 'm5zn.2xlarge', 'm5zn.3xlarge', 'm5zn.6xlarge', 'm5zn.large', 'm5zn.metal', 'm5zn.xlarge', 'm6g.12xlarge', 'm6g.16xlarge', 'm6g.2xlarge', 'm6g.4xlarge', 'm6g.8xlarge', 'm6g.large', 'm6g.medium', 'm6g.metal', 'm6g.xlarge', 'm6gd.12xlarge', 'm6gd.16xlarge', 'm6gd.2xlarge', 'm6gd.4xlarge', 'm6gd.8xlarge', 'm6gd.large', 'm6gd.medium', 'm6gd.metal', 'm6gd.xlarge', 'm6i.12xlarge', 'm6i.16xlarge', 'm6i.24xlarge', 'm6i.2xlarge', 'm6i.32xlarge', 'm6i.4xlarge', 'm6i.8xlarge', 'm6i.large', 'm6i.xlarge', 'mac1.metal', 'p2.16xlarge', 'p2.8xlarge', 'p2.xlarge', 'p3.16xlarge', 'p3.2xlarge', 'p3.8xlarge', 'p3dn.24xlarge', 'p4d.24xlarge', 'r3.2xlarge', 'r3.4xlarge', 'r3.8xlarge', 'r3.large', 'r3.xlarge', 'r4.16xlarge', 'r4.2xlarge', 'r4.4xlarge', 'r4.8xlarge', 'r4.large', 'r4.xlarge', 'r5.12xlarge', 'r5.16xlarge', 'r5.24xlarge', 'r5.2xlarge', 'r5.4xlarge', 'r5.8xlarge', 'r5.large', 'r5.metal', 'r5.xlarge', 'r5a.12xlarge', 'r5a.16xlarge', 'r5a.24xlarge', 'r5a.2xlarge', 'r5a.4xlarge', 'r5a.8xlarge', 'r5a.large', 'r5a.xlarge', 'r5ad.12xlarge', 'r5ad.16xlarge', 'r5ad.24xlarge', 'r5ad.2xlarge', 'r5ad.4xlarge', 'r5ad.8xlarge', 'r5ad.large', 'r5ad.xlarge', 'r5b.12xlarge', 'r5b.16xlarge', 'r5b.24xlarge', 'r5b.2xlarge', 'r5b.4xlarge', 'r5b.8xlarge', 'r5b.large', 'r5b.metal', 'r5b.xlarge', 'r5d.12xlarge', 'r5d.16xlarge', 'r5d.24xlarge', 'r5d.2xlarge', 'r5d.4xlarge', 'r5d.8xlarge', 'r5d.large', 'r5d.metal', 'r5d.xlarge', 'r5dn.12xlarge', 'r5dn.16xlarge', 'r5dn.24xlarge', 'r5dn.2xlarge', 'r5dn.4xlarge', 'r5dn.8xlarge', 'r5dn.large', 'r5dn.metal', 'r5dn.xlarge', 'r5n.12xlarge', 'r5n.16xlarge', 'r5n.24xlarge', 'r5n.2xlarge', 'r5n.4xlarge', 'r5n.8xlarge', 'r5n.large', 'r5n.metal', 'r5n.xlarge', 'r6g.12xlarge', 'r6g.16xlarge', 'r6g.2xlarge', 'r6g.4xlarge', 'r6g.8xlarge', 'r6g.large', 'r6g.medium', 'r6g.metal', 'r6g.xlarge', 'r6gd.12xlarge', 'r6gd.16xlarge', 'r6gd.2xlarge', 'r6gd.4xlarge', 'r6gd.8xlarge', 'r6gd.large', 'r6gd.medium', 'r6gd.metal', 'r6gd.xlarge', 't1.micro', 't2.2xlarge', 't2.large', 't2.medium', 't2.micro', 't2.nano', 't2.small', 't2.xlarge', 't3.2xlarge', 't3.large', 't3.medium', 't3.micro', 't3.nano', 't3.small', 't3.xlarge', 't3a.2xlarge', 't3a.large', 't3a.medium', 't3a.micro', 't3a.nano', 't3a.small', 't3a.xlarge', 't4g.2xlarge', 't4g.large', 't4g.medium', 't4g.micro', 't4g.nano', 't4g.small', 't4g.xlarge', 'u-12tb1.112xlarge', 'u-12tb1.metal', 'u-18tb1.metal', 'u-24tb1.metal', 'u-6tb1.112xlarge', 'u-6tb1.56xlarge', 'u-6tb1.metal', 'u-9tb1.112xlarge', 'u-9tb1.metal', 'x1.16xlarge', 'x1.32xlarge', 'x1e.16xlarge', 'x1e.2xlarge', 'x1e.32xlarge', 'x1e.4xlarge', 'x1e.8xlarge', 'x1e.xlarge', 'x2gd.12xlarge', 'x2gd.16xlarge', 'x2gd.2xlarge', 'x2gd.4xlarge', 'x2gd.8xlarge', 'x2gd.large', 'x2gd.medium', 'x2gd.metal', 'x2gd.xlarge', 'z1d.12xlarge', 'z1d.2xlarge', 'z1d.3xlarge', 'z1d.6xlarge', 'z1d.large', 'z1d.metal', 'z1d.xlarge')`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "instance_type" "public"."instance_type_instance_type_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "current_generation" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "free_tier_eligible" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "bare_metal" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "memory_size_in_mi_b" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "instance_storage_supported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "hibernation_supported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "burstable_performance_supported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "dedicated_hosts_supported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "auto_recovery_supported" boolean NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."availability_zone_opt_in_status_enum" AS ENUM('not-opted-in', 'opt-in-not-required', 'opted-in')`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" ADD "opt_in_status" "public"."availability_zone_opt_in_status_enum" NOT NULL DEFAULT 'opt-in-not-required'`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" ADD "zone_name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" ADD "zone_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" ADD "group_name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" ADD "network_border_group" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD "ami_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD CONSTRAINT "PK_5f5813932818284a2968b65bbd6" PRIMARY KEY ("ami_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD "product_code_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP CONSTRAINT "PK_5f5813932818284a2968b65bbd6"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD CONSTRAINT "PK_7eae1e10d520b62ec9e26c4a2fb" PRIMARY KEY ("ami_id", "product_code_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD "ami_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD CONSTRAINT "PK_1d46e384bbb2a9fde6378a86f14" PRIMARY KEY ("ami_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD "ebs_block_device_mapping_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP CONSTRAINT "PK_1d46e384bbb2a9fde6378a86f14"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD CONSTRAINT "PK_93af2da2dacc89a748551856bba" PRIMARY KEY ("ami_id", "ebs_block_device_mapping_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD "ami_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD CONSTRAINT "PK_4e9018eb6d3190fe63deccaa7c3" PRIMARY KEY ("ami_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD "tag_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP CONSTRAINT "PK_4e9018eb6d3190fe63deccaa7c3"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD CONSTRAINT "PK_62db772333f691560bf2cb72b1d" PRIMARY KEY ("ami_id", "tag_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD "instance_storage_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD CONSTRAINT "PK_38834f60efde0aff7c836645a25" PRIMARY KEY ("instance_storage_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD "disk_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP CONSTRAINT "PK_38834f60efde0aff7c836645a25"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD CONSTRAINT "PK_29972402e9acbaeecc17e8380a5" PRIMARY KEY ("instance_storage_info_id", "disk_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD "fpga_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD CONSTRAINT "PK_31655488bf79fd765281eb3ee13" PRIMARY KEY ("fpga_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD "fpga_device_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP CONSTRAINT "PK_31655488bf79fd765281eb3ee13"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD CONSTRAINT "PK_9fe7e4399fb8acbd894afdf7e8b" PRIMARY KEY ("fpga_info_id", "fpga_device_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD "gpu_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD CONSTRAINT "PK_bd125596702150cb617f381d0f2" PRIMARY KEY ("gpu_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD "gpu_device_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP CONSTRAINT "PK_bd125596702150cb617f381d0f2"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD CONSTRAINT "PK_dcac6933105c6e6ae4b0b22325d" PRIMARY KEY ("gpu_info_id", "gpu_device_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD "inference_accelerator_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD CONSTRAINT "PK_4f8487d0cd6197a3bbabaf669b7" PRIMARY KEY ("inference_accelerator_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD "inference_device_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP CONSTRAINT "PK_4f8487d0cd6197a3bbabaf669b7"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD CONSTRAINT "PK_8200b5f36dcbde017733af34295" PRIMARY KEY ("inference_accelerator_info_id", "inference_device_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD "network_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD CONSTRAINT "PK_1cc52b6e3ae855a309660e58e60" PRIMARY KEY ("network_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD "network_card_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP CONSTRAINT "PK_1cc52b6e3ae855a309660e58e60"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD CONSTRAINT "PK_27b282b09a275b15db0ee632baa" PRIMARY KEY ("network_info_id", "network_card_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD "placement_group_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD CONSTRAINT "PK_fcaa1b3100f75de6795abc2ff57" PRIMARY KEY ("placement_group_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD "placement_group_strategy_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP CONSTRAINT "PK_fcaa1b3100f75de6795abc2ff57"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD CONSTRAINT "PK_1b86686675e1421bfdb07d73b4e" PRIMARY KEY ("placement_group_info_id", "placement_group_strategy_id")`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD "processor_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD CONSTRAINT "PK_aa37e93922c084e42c465a396e6" PRIMARY KEY ("processor_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD "cpu_architecture_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP CONSTRAINT "PK_aa37e93922c084e42c465a396e6"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD CONSTRAINT "PK_d8640719bd3d211bbbdbba2178c" PRIMARY KEY ("processor_info_id", "cpu_architecture_id")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD "vcpu_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD CONSTRAINT "PK_fc2c10994fe41dabc3a3b5a303f" PRIMARY KEY ("vcpu_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD "valid_core_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP CONSTRAINT "PK_fc2c10994fe41dabc3a3b5a303f"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD CONSTRAINT "PK_e88bd0682e432413ca4262e1348" PRIMARY KEY ("vcpu_info_id", "valid_core_id")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD "vcpu_info_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD CONSTRAINT "PK_030e5f3fe8d268b47c57641506a" PRIMARY KEY ("vcpu_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD "valid_threads_per_core_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP CONSTRAINT "PK_030e5f3fe8d268b47c57641506a"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD CONSTRAINT "PK_405060ff4bae839c3dda7919e45" PRIMARY KEY ("vcpu_info_id", "valid_threads_per_core_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD "instance_type_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD CONSTRAINT "PK_f7d8375e34b43c1d490eef07b55" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD "usage_class_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP CONSTRAINT "PK_f7d8375e34b43c1d490eef07b55"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD CONSTRAINT "PK_d0810026a388f48b88ceb28c573" PRIMARY KEY ("instance_type_id", "usage_class_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD "instance_type_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD CONSTRAINT "PK_5a146f5a523d027bdecf53f8685" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD "device_type_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP CONSTRAINT "PK_5a146f5a523d027bdecf53f8685"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD CONSTRAINT "PK_b5dd780fb09f81d26a07ea6ad98" PRIMARY KEY ("instance_type_id", "device_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD "instance_type_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD CONSTRAINT "PK_0d163b978403b500b47eba5d097" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD "virtualization_type_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP CONSTRAINT "PK_0d163b978403b500b47eba5d097"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD CONSTRAINT "PK_f0bc253acf504b2a1b4b47191ee" PRIMARY KEY ("instance_type_id", "virtualization_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD "instance_type_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD CONSTRAINT "PK_9c37dcb1e287c7a33b7faac34e8" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD "boot_mode_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP CONSTRAINT "PK_9c37dcb1e287c7a33b7faac34e8"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD CONSTRAINT "PK_c3f5ac38b4d96590a0e900b7f40" PRIMARY KEY ("instance_type_id", "boot_mode_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD "instance_type_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD CONSTRAINT "PK_2ec996e8e52b74e2b833a0d15b2" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD "region_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP CONSTRAINT "PK_2ec996e8e52b74e2b833a0d15b2"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD CONSTRAINT "PK_73c97905ad06b9cf2ef07bb3dc0" PRIMARY KEY ("instance_type_id", "region_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD "instance_type_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD CONSTRAINT "PK_bcc2197b46174377412f948c251" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD "availability_zone_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP CONSTRAINT "PK_bcc2197b46174377412f948c251"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD CONSTRAINT "PK_fe1aab42aa0176751d17f54726c" PRIMARY KEY ("instance_type_id", "availability_zone_id")`);
        await queryRunner.query(`ALTER TABLE "public"."region" ALTER COLUMN "name" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."region" ALTER COLUMN "endpoint" DROP NOT NULL`);
        await queryRunner.query(`CREATE INDEX "IDX_5f5813932818284a2968b65bbd" ON "public"."ami_product_codes_product_code" ("ami_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_1e56d7b5240dfdaa218c6cd514" ON "public"."ami_product_codes_product_code" ("product_code_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_1d46e384bbb2a9fde6378a86f1" ON "public"."ami_block_device_mappings_ebs_block_device_mapping" ("ami_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_65afc657dede946a97fc1c8cfb" ON "public"."ami_block_device_mappings_ebs_block_device_mapping" ("ebs_block_device_mapping_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_4e9018eb6d3190fe63deccaa7c" ON "public"."ami_tags_tag" ("ami_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_eb692930a8f8d93d0b9b083752" ON "public"."ami_tags_tag" ("tag_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_38834f60efde0aff7c836645a2" ON "public"."instance_storage_info_disks_disk_info" ("instance_storage_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_1be4a83d4a7526415a1e7faccc" ON "public"."instance_storage_info_disks_disk_info" ("disk_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_31655488bf79fd765281eb3ee1" ON "public"."fpga_info_fpgas_fpga_device_info" ("fpga_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_2268e105277f5229c9f188f61c" ON "public"."fpga_info_fpgas_fpga_device_info" ("fpga_device_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_bd125596702150cb617f381d0f" ON "public"."gpu_info_gpus_gpu_device_info" ("gpu_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_7a55525d1a014e05d9d4c8c52c" ON "public"."gpu_info_gpus_gpu_device_info" ("gpu_device_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_4f8487d0cd6197a3bbabaf669b" ON "public"."inference_accelerator_info_accelerators_inference_device_info" ("inference_accelerator_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_b602fa24ec14bdcc6ea5c5a8a6" ON "public"."inference_accelerator_info_accelerators_inference_device_info" ("inference_device_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_1cc52b6e3ae855a309660e58e6" ON "public"."network_info_network_cards_network_card_info" ("network_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_733bc8883afdead96d888557d3" ON "public"."network_info_network_cards_network_card_info" ("network_card_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_fcaa1b3100f75de6795abc2ff5" ON "public"."pla_gro_inf_sup_str_pla_gro_str" ("placement_group_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_c5d67fa1330dd1981276ac4b8c" ON "public"."pla_gro_inf_sup_str_pla_gro_str" ("placement_group_strategy_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_aa37e93922c084e42c465a396e" ON "public"."processor_info_supported_architectures_cpu_architecture" ("processor_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_a31ab49cbc6b1730dfe3224017" ON "public"."processor_info_supported_architectures_cpu_architecture" ("cpu_architecture_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_fc2c10994fe41dabc3a3b5a303" ON "public"."vcpu_info_valid_cores_valid_core" ("vcpu_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_3c86374d2d8408fce1e851e7fd" ON "public"."vcpu_info_valid_cores_valid_core" ("valid_core_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_030e5f3fe8d268b47c57641506" ON "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ("vcpu_info_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_298b890565fa8e0a53b451738e" ON "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ("valid_threads_per_core_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_f7d8375e34b43c1d490eef07b5" ON "public"."instance_type_supported_usage_classes_usage_class" ("instance_type_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_f95cd9033d5c9c60f14e55d408" ON "public"."instance_type_supported_usage_classes_usage_class" ("usage_class_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_5a146f5a523d027bdecf53f868" ON "public"."instance_type_supported_root_device_types_device_type" ("instance_type_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_58b6e3fd014da8bdf3e9fc688d" ON "public"."instance_type_supported_root_device_types_device_type" ("device_type_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_0d163b978403b500b47eba5d09" ON "public"."ins_typ_sup_vir_typ_vir_typ" ("instance_type_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_66dce3dea1b1105585c7799796" ON "public"."ins_typ_sup_vir_typ_vir_typ" ("virtualization_type_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_9c37dcb1e287c7a33b7faac34e" ON "public"."instance_type_supported_boot_modes_boot_mode" ("instance_type_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_8feca90feb662840e93f69dbab" ON "public"."instance_type_supported_boot_modes_boot_mode" ("boot_mode_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_2ec996e8e52b74e2b833a0d15b" ON "public"."instance_type_regions_region" ("instance_type_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_2d2a09d2b55d7b6b89dc578db3" ON "public"."instance_type_regions_region" ("region_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_bcc2197b46174377412f948c25" ON "public"."instance_type_availability_zones_availability_zone" ("instance_type_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_412917c37df7b4fd87130c5b32" ON "public"."instance_type_availability_zones_availability_zone" ("availability_zone_id") `);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD CONSTRAINT "FK_5f5813932818284a2968b65bbd6" FOREIGN KEY ("ami_id") REFERENCES "ami"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD CONSTRAINT "FK_1e56d7b5240dfdaa218c6cd5146" FOREIGN KEY ("product_code_id") REFERENCES "product_code"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD CONSTRAINT "FK_1d46e384bbb2a9fde6378a86f14" FOREIGN KEY ("ami_id") REFERENCES "ami"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD CONSTRAINT "FK_65afc657dede946a97fc1c8cfb1" FOREIGN KEY ("ebs_block_device_mapping_id") REFERENCES "ebs_block_device_mapping"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD CONSTRAINT "FK_4e9018eb6d3190fe63deccaa7c3" FOREIGN KEY ("ami_id") REFERENCES "ami"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD CONSTRAINT "FK_eb692930a8f8d93d0b9b083752e" FOREIGN KEY ("tag_id") REFERENCES "tag"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD CONSTRAINT "FK_38834f60efde0aff7c836645a25" FOREIGN KEY ("instance_storage_info_id") REFERENCES "instance_storage_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD CONSTRAINT "FK_1be4a83d4a7526415a1e7facccf" FOREIGN KEY ("disk_info_id") REFERENCES "disk_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD CONSTRAINT "FK_31655488bf79fd765281eb3ee13" FOREIGN KEY ("fpga_info_id") REFERENCES "fpga_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD CONSTRAINT "FK_2268e105277f5229c9f188f61c2" FOREIGN KEY ("fpga_device_info_id") REFERENCES "fpga_device_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD CONSTRAINT "FK_bd125596702150cb617f381d0f2" FOREIGN KEY ("gpu_info_id") REFERENCES "gpu_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD CONSTRAINT "FK_7a55525d1a014e05d9d4c8c52c9" FOREIGN KEY ("gpu_device_info_id") REFERENCES "gpu_device_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD CONSTRAINT "FK_4f8487d0cd6197a3bbabaf669b7" FOREIGN KEY ("inference_accelerator_info_id") REFERENCES "inference_accelerator_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD CONSTRAINT "FK_b602fa24ec14bdcc6ea5c5a8a61" FOREIGN KEY ("inference_device_info_id") REFERENCES "inference_device_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD CONSTRAINT "FK_1cc52b6e3ae855a309660e58e60" FOREIGN KEY ("network_info_id") REFERENCES "network_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD CONSTRAINT "FK_733bc8883afdead96d888557d35" FOREIGN KEY ("network_card_info_id") REFERENCES "network_card_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD CONSTRAINT "FK_fcaa1b3100f75de6795abc2ff57" FOREIGN KEY ("placement_group_info_id") REFERENCES "placement_group_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD CONSTRAINT "FK_c5d67fa1330dd1981276ac4b8cf" FOREIGN KEY ("placement_group_strategy_id") REFERENCES "placement_group_strategy"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD CONSTRAINT "FK_aa37e93922c084e42c465a396e6" FOREIGN KEY ("processor_info_id") REFERENCES "processor_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD CONSTRAINT "FK_a31ab49cbc6b1730dfe32240171" FOREIGN KEY ("cpu_architecture_id") REFERENCES "cpu_architecture"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD CONSTRAINT "FK_fc2c10994fe41dabc3a3b5a303f" FOREIGN KEY ("vcpu_info_id") REFERENCES "vcpu_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD CONSTRAINT "FK_3c86374d2d8408fce1e851e7fd8" FOREIGN KEY ("valid_core_id") REFERENCES "valid_core"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD CONSTRAINT "FK_030e5f3fe8d268b47c57641506a" FOREIGN KEY ("vcpu_info_id") REFERENCES "vcpu_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD CONSTRAINT "FK_298b890565fa8e0a53b451738e1" FOREIGN KEY ("valid_threads_per_core_id") REFERENCES "valid_threads_per_core"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD CONSTRAINT "FK_f7d8375e34b43c1d490eef07b55" FOREIGN KEY ("instance_type_id") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD CONSTRAINT "FK_f95cd9033d5c9c60f14e55d4085" FOREIGN KEY ("usage_class_id") REFERENCES "usage_class"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD CONSTRAINT "FK_5a146f5a523d027bdecf53f8685" FOREIGN KEY ("instance_type_id") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD CONSTRAINT "FK_58b6e3fd014da8bdf3e9fc688da" FOREIGN KEY ("device_type_id") REFERENCES "device_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD CONSTRAINT "FK_0d163b978403b500b47eba5d097" FOREIGN KEY ("instance_type_id") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD CONSTRAINT "FK_66dce3dea1b1105585c7799796f" FOREIGN KEY ("virtualization_type_id") REFERENCES "virtualization_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD CONSTRAINT "FK_9c37dcb1e287c7a33b7faac34e8" FOREIGN KEY ("instance_type_id") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD CONSTRAINT "FK_8feca90feb662840e93f69dbab0" FOREIGN KEY ("boot_mode_id") REFERENCES "boot_mode"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD CONSTRAINT "FK_2ec996e8e52b74e2b833a0d15b2" FOREIGN KEY ("instance_type_id") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD CONSTRAINT "FK_2d2a09d2b55d7b6b89dc578db39" FOREIGN KEY ("region_id") REFERENCES "region"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD CONSTRAINT "FK_bcc2197b46174377412f948c251" FOREIGN KEY ("instance_type_id") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD CONSTRAINT "FK_412917c37df7b4fd87130c5b328" FOREIGN KEY ("availability_zone_id") REFERENCES "availability_zone"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP CONSTRAINT "FK_412917c37df7b4fd87130c5b328"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP CONSTRAINT "FK_bcc2197b46174377412f948c251"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP CONSTRAINT "FK_2d2a09d2b55d7b6b89dc578db39"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP CONSTRAINT "FK_2ec996e8e52b74e2b833a0d15b2"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP CONSTRAINT "FK_8feca90feb662840e93f69dbab0"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP CONSTRAINT "FK_9c37dcb1e287c7a33b7faac34e8"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP CONSTRAINT "FK_66dce3dea1b1105585c7799796f"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP CONSTRAINT "FK_0d163b978403b500b47eba5d097"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP CONSTRAINT "FK_58b6e3fd014da8bdf3e9fc688da"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP CONSTRAINT "FK_5a146f5a523d027bdecf53f8685"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP CONSTRAINT "FK_f95cd9033d5c9c60f14e55d4085"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP CONSTRAINT "FK_f7d8375e34b43c1d490eef07b55"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP CONSTRAINT "FK_298b890565fa8e0a53b451738e1"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP CONSTRAINT "FK_030e5f3fe8d268b47c57641506a"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP CONSTRAINT "FK_3c86374d2d8408fce1e851e7fd8"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP CONSTRAINT "FK_fc2c10994fe41dabc3a3b5a303f"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP CONSTRAINT "FK_a31ab49cbc6b1730dfe32240171"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP CONSTRAINT "FK_aa37e93922c084e42c465a396e6"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP CONSTRAINT "FK_c5d67fa1330dd1981276ac4b8cf"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP CONSTRAINT "FK_fcaa1b3100f75de6795abc2ff57"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP CONSTRAINT "FK_733bc8883afdead96d888557d35"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP CONSTRAINT "FK_1cc52b6e3ae855a309660e58e60"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP CONSTRAINT "FK_b602fa24ec14bdcc6ea5c5a8a61"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP CONSTRAINT "FK_4f8487d0cd6197a3bbabaf669b7"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP CONSTRAINT "FK_7a55525d1a014e05d9d4c8c52c9"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP CONSTRAINT "FK_bd125596702150cb617f381d0f2"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP CONSTRAINT "FK_2268e105277f5229c9f188f61c2"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP CONSTRAINT "FK_31655488bf79fd765281eb3ee13"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP CONSTRAINT "FK_1be4a83d4a7526415a1e7facccf"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP CONSTRAINT "FK_38834f60efde0aff7c836645a25"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP CONSTRAINT "FK_eb692930a8f8d93d0b9b083752e"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP CONSTRAINT "FK_4e9018eb6d3190fe63deccaa7c3"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP CONSTRAINT "FK_65afc657dede946a97fc1c8cfb1"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP CONSTRAINT "FK_1d46e384bbb2a9fde6378a86f14"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP CONSTRAINT "FK_1e56d7b5240dfdaa218c6cd5146"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP CONSTRAINT "FK_5f5813932818284a2968b65bbd6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_412917c37df7b4fd87130c5b32"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_bcc2197b46174377412f948c25"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2d2a09d2b55d7b6b89dc578db3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2ec996e8e52b74e2b833a0d15b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8feca90feb662840e93f69dbab"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9c37dcb1e287c7a33b7faac34e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_66dce3dea1b1105585c7799796"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_0d163b978403b500b47eba5d09"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_58b6e3fd014da8bdf3e9fc688d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5a146f5a523d027bdecf53f868"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f95cd9033d5c9c60f14e55d408"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f7d8375e34b43c1d490eef07b5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_298b890565fa8e0a53b451738e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_030e5f3fe8d268b47c57641506"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3c86374d2d8408fce1e851e7fd"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fc2c10994fe41dabc3a3b5a303"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a31ab49cbc6b1730dfe3224017"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_aa37e93922c084e42c465a396e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c5d67fa1330dd1981276ac4b8c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fcaa1b3100f75de6795abc2ff5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_733bc8883afdead96d888557d3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1cc52b6e3ae855a309660e58e6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b602fa24ec14bdcc6ea5c5a8a6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4f8487d0cd6197a3bbabaf669b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7a55525d1a014e05d9d4c8c52c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_bd125596702150cb617f381d0f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2268e105277f5229c9f188f61c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_31655488bf79fd765281eb3ee1"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1be4a83d4a7526415a1e7faccc"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_38834f60efde0aff7c836645a2"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_eb692930a8f8d93d0b9b083752"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4e9018eb6d3190fe63deccaa7c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_65afc657dede946a97fc1c8cfb"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1d46e384bbb2a9fde6378a86f1"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1e56d7b5240dfdaa218c6cd514"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5f5813932818284a2968b65bbd"`);
        await queryRunner.query(`ALTER TABLE "public"."region" ALTER COLUMN "endpoint" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."region" ALTER COLUMN "name" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP CONSTRAINT "PK_fe1aab42aa0176751d17f54726c"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD CONSTRAINT "PK_bcc2197b46174377412f948c251" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP COLUMN "availability_zone_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP CONSTRAINT "PK_bcc2197b46174377412f948c251"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP COLUMN "instance_type_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP CONSTRAINT "PK_73c97905ad06b9cf2ef07bb3dc0"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD CONSTRAINT "PK_2ec996e8e52b74e2b833a0d15b2" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP COLUMN "region_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP CONSTRAINT "PK_2ec996e8e52b74e2b833a0d15b2"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP COLUMN "instance_type_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP CONSTRAINT "PK_c3f5ac38b4d96590a0e900b7f40"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD CONSTRAINT "PK_9c37dcb1e287c7a33b7faac34e8" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP COLUMN "boot_mode_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP CONSTRAINT "PK_9c37dcb1e287c7a33b7faac34e8"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP COLUMN "instance_type_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP CONSTRAINT "PK_f0bc253acf504b2a1b4b47191ee"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD CONSTRAINT "PK_0d163b978403b500b47eba5d097" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP COLUMN "virtualization_type_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP CONSTRAINT "PK_0d163b978403b500b47eba5d097"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP COLUMN "instance_type_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP CONSTRAINT "PK_b5dd780fb09f81d26a07ea6ad98"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD CONSTRAINT "PK_5a146f5a523d027bdecf53f8685" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP COLUMN "device_type_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP CONSTRAINT "PK_5a146f5a523d027bdecf53f8685"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP COLUMN "instance_type_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP CONSTRAINT "PK_d0810026a388f48b88ceb28c573"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD CONSTRAINT "PK_f7d8375e34b43c1d490eef07b55" PRIMARY KEY ("instance_type_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP COLUMN "usage_class_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP CONSTRAINT "PK_f7d8375e34b43c1d490eef07b55"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP COLUMN "instance_type_id"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP CONSTRAINT "PK_405060ff4bae839c3dda7919e45"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD CONSTRAINT "PK_030e5f3fe8d268b47c57641506a" PRIMARY KEY ("vcpu_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP COLUMN "valid_threads_per_core_id"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP CONSTRAINT "PK_030e5f3fe8d268b47c57641506a"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP COLUMN "vcpu_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP CONSTRAINT "PK_e88bd0682e432413ca4262e1348"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD CONSTRAINT "PK_fc2c10994fe41dabc3a3b5a303f" PRIMARY KEY ("vcpu_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP COLUMN "valid_core_id"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP CONSTRAINT "PK_fc2c10994fe41dabc3a3b5a303f"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP COLUMN "vcpu_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP CONSTRAINT "PK_d8640719bd3d211bbbdbba2178c"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD CONSTRAINT "PK_aa37e93922c084e42c465a396e6" PRIMARY KEY ("processor_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP COLUMN "cpu_architecture_id"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP CONSTRAINT "PK_aa37e93922c084e42c465a396e6"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP COLUMN "processor_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP CONSTRAINT "PK_1b86686675e1421bfdb07d73b4e"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD CONSTRAINT "PK_fcaa1b3100f75de6795abc2ff57" PRIMARY KEY ("placement_group_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP COLUMN "placement_group_strategy_id"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP CONSTRAINT "PK_fcaa1b3100f75de6795abc2ff57"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP COLUMN "placement_group_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP CONSTRAINT "PK_27b282b09a275b15db0ee632baa"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD CONSTRAINT "PK_1cc52b6e3ae855a309660e58e60" PRIMARY KEY ("network_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP COLUMN "network_card_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP CONSTRAINT "PK_1cc52b6e3ae855a309660e58e60"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP COLUMN "network_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP CONSTRAINT "PK_8200b5f36dcbde017733af34295"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD CONSTRAINT "PK_4f8487d0cd6197a3bbabaf669b7" PRIMARY KEY ("inference_accelerator_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP COLUMN "inference_device_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP CONSTRAINT "PK_4f8487d0cd6197a3bbabaf669b7"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP COLUMN "inference_accelerator_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP CONSTRAINT "PK_dcac6933105c6e6ae4b0b22325d"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD CONSTRAINT "PK_bd125596702150cb617f381d0f2" PRIMARY KEY ("gpu_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP COLUMN "gpu_device_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP CONSTRAINT "PK_bd125596702150cb617f381d0f2"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP COLUMN "gpu_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP CONSTRAINT "PK_9fe7e4399fb8acbd894afdf7e8b"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD CONSTRAINT "PK_31655488bf79fd765281eb3ee13" PRIMARY KEY ("fpga_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP COLUMN "fpga_device_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP CONSTRAINT "PK_31655488bf79fd765281eb3ee13"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP COLUMN "fpga_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP CONSTRAINT "PK_29972402e9acbaeecc17e8380a5"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD CONSTRAINT "PK_38834f60efde0aff7c836645a25" PRIMARY KEY ("instance_storage_info_id")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP COLUMN "disk_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP CONSTRAINT "PK_38834f60efde0aff7c836645a25"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP COLUMN "instance_storage_info_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP CONSTRAINT "PK_62db772333f691560bf2cb72b1d"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD CONSTRAINT "PK_4e9018eb6d3190fe63deccaa7c3" PRIMARY KEY ("ami_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP COLUMN "tag_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP CONSTRAINT "PK_4e9018eb6d3190fe63deccaa7c3"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP COLUMN "ami_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP CONSTRAINT "PK_93af2da2dacc89a748551856bba"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD CONSTRAINT "PK_1d46e384bbb2a9fde6378a86f14" PRIMARY KEY ("ami_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP COLUMN "ebs_block_device_mapping_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP CONSTRAINT "PK_1d46e384bbb2a9fde6378a86f14"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP COLUMN "ami_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP CONSTRAINT "PK_7eae1e10d520b62ec9e26c4a2fb"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD CONSTRAINT "PK_5f5813932818284a2968b65bbd6" PRIMARY KEY ("ami_id")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP COLUMN "product_code_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP CONSTRAINT "PK_5f5813932818284a2968b65bbd6"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP COLUMN "ami_id"`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" DROP COLUMN "network_border_group"`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" DROP COLUMN "group_name"`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" DROP COLUMN "zone_id"`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" DROP COLUMN "zone_name"`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" DROP COLUMN "opt_in_status"`);
        await queryRunner.query(`DROP TYPE "public"."availability_zone_opt_in_status_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "auto_recovery_supported"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "dedicated_hosts_supported"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "burstable_performance_supported"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "hibernation_supported"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "instance_storage_supported"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "memory_size_in_mi_b"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "bare_metal"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "free_tier_eligible"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "current_generation"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" DROP COLUMN "instance_type"`);
        await queryRunner.query(`DROP TYPE "public"."instance_type_instance_type_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" DROP COLUMN "default_threads_per_core"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" DROP COLUMN "default_cores"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" DROP COLUMN "default_vcp_us"`);
        await queryRunner.query(`ALTER TABLE "public"."region" DROP COLUMN "opt_in_status"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "encryption_in_transit_supported"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "efa_supported"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "ena_support"`);
        await queryRunner.query(`DROP TYPE "public"."network_info_ena_support_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "ipv6supported"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "ipv6addresses_per_interface"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "ipv4addresses_per_interface"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "default_network_card_index"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "maximum_network_cards"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "maximum_network_interfaces"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" DROP COLUMN "network_performance"`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" DROP COLUMN "maximum_network_interfaces"`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" DROP COLUMN "network_performance"`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" DROP COLUMN "network_card_index"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" DROP COLUMN "nvme_support"`);
        await queryRunner.query(`DROP TYPE "public"."ebs_info_nvme_support_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" DROP COLUMN "encryption_support"`);
        await queryRunner.query(`DROP TYPE "public"."ebs_info_encryption_support_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" DROP COLUMN "ebs_optimized_support"`);
        await queryRunner.query(`DROP TYPE "public"."ebs_info_ebs_optimized_support_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info" DROP COLUMN "nvme_support"`);
        await queryRunner.query(`DROP TYPE "public"."instance_storage_info_nvme_support_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info" DROP COLUMN "total_size_in_gb"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "maximum_iops"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "maximum_throughput_in_m_bps"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "maximum_bandwidth_in_mbps"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "baseline_iops"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "baseline_throughput_in_m_bps"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" DROP COLUMN "baseline_bandwidth_in_mbps"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "deprecation_time"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "sirov_net_support"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "root_device_type"`);
        await queryRunner.query(`DROP TYPE "public"."ami_root_device_type_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "root_device_name"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "image_owner_alias"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "ena_support"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "ramdisk_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "usage_operation"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "platform_details"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "owner_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "kernel_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "image_type"`);
        await queryRunner.query(`DROP TYPE "public"."ami_image_type_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "image_location"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "image_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ami" DROP COLUMN "creation_date"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" DROP COLUMN "no_device"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" DROP COLUMN "virtual_name"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" DROP COLUMN "device_name"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "outpost_arn"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "kms_key_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "volume_type"`);
        await queryRunner.query(`DROP TYPE "public"."ebs_block_device_type_volume_type_enum"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "volume_size"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "snapshot_id"`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" DROP COLUMN "delete_on_termination"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD "instanceTypeId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD CONSTRAINT "PK_ddceea37cc8e3a55c25cd183f1c" PRIMARY KEY ("instanceTypeId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD "availabilityZoneId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" DROP CONSTRAINT "PK_ddceea37cc8e3a55c25cd183f1c"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD CONSTRAINT "PK_985d6b2c9545a5d8101f95ba2dd" PRIMARY KEY ("availabilityZoneId", "instanceTypeId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD "regionId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD CONSTRAINT "PK_9f19bef18ebbdb2ddef5bc4fc9c" PRIMARY KEY ("regionId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD "instanceTypeId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" DROP CONSTRAINT "PK_9f19bef18ebbdb2ddef5bc4fc9c"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD CONSTRAINT "PK_0e31dd069fa70a55dc63e0ad803" PRIMARY KEY ("instanceTypeId", "regionId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD "bootModeId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD CONSTRAINT "PK_d5e1e0258e6532899c373cf7276" PRIMARY KEY ("bootModeId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD "instanceTypeId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" DROP CONSTRAINT "PK_d5e1e0258e6532899c373cf7276"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD CONSTRAINT "PK_26f9380b908e7b57aaebdae947c" PRIMARY KEY ("instanceTypeId", "bootModeId")`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD "virtualizationTypeId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD CONSTRAINT "PK_f7db3c32e781541f328f0502fa6" PRIMARY KEY ("virtualizationTypeId")`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD "instanceTypeId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" DROP CONSTRAINT "PK_f7db3c32e781541f328f0502fa6"`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD CONSTRAINT "PK_3ce588be477c139ddbbfca8ec44" PRIMARY KEY ("instanceTypeId", "virtualizationTypeId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD "deviceTypeId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD CONSTRAINT "PK_bd4dfa196aae7012c6987887899" PRIMARY KEY ("deviceTypeId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD "instanceTypeId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" DROP CONSTRAINT "PK_bd4dfa196aae7012c6987887899"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD CONSTRAINT "PK_05e7ecf05ab06569e23eb8793f2" PRIMARY KEY ("instanceTypeId", "deviceTypeId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD "usageClassId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD CONSTRAINT "PK_1dad445b95c880dc668fd01ceb3" PRIMARY KEY ("usageClassId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD "instanceTypeId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" DROP CONSTRAINT "PK_1dad445b95c880dc668fd01ceb3"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD CONSTRAINT "PK_5352f60d5e6abb127f880ff48bc" PRIMARY KEY ("instanceTypeId", "usageClassId")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD "validThreadsPerCoreId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD CONSTRAINT "PK_ac3a3f74934b0e90a077d2ab5d3" PRIMARY KEY ("validThreadsPerCoreId")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD "vcpuInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" DROP CONSTRAINT "PK_ac3a3f74934b0e90a077d2ab5d3"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD CONSTRAINT "PK_5a6cca75fc8bbadf1d058432345" PRIMARY KEY ("vcpuInfoId", "validThreadsPerCoreId")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD "validCoreId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD CONSTRAINT "PK_6bfcecb8b3e69646c70f259cc71" PRIMARY KEY ("validCoreId")`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD "vcpuInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" DROP CONSTRAINT "PK_6bfcecb8b3e69646c70f259cc71"`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD CONSTRAINT "PK_11f0bc450e1429705338e1131a3" PRIMARY KEY ("vcpuInfoId", "validCoreId")`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD "cpuArchitectureId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD CONSTRAINT "PK_528f6ad79fa40bed258063306f1" PRIMARY KEY ("cpuArchitectureId")`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD "processorInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" DROP CONSTRAINT "PK_528f6ad79fa40bed258063306f1"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD CONSTRAINT "PK_0b2cca4531082f0b9f1eaf29ad3" PRIMARY KEY ("processorInfoId", "cpuArchitectureId")`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD "placementGroupStrategyId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD CONSTRAINT "PK_a9706401551c7ca9fa91d3f47b0" PRIMARY KEY ("placementGroupStrategyId")`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD "placementGroupInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" DROP CONSTRAINT "PK_a9706401551c7ca9fa91d3f47b0"`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD CONSTRAINT "PK_5aa3969c938d027fdfc7222bbff" PRIMARY KEY ("placementGroupInfoId", "placementGroupStrategyId")`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD "networkCardInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD CONSTRAINT "PK_9c33046e851961c6f9a131aeb63" PRIMARY KEY ("networkCardInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD "networkInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" DROP CONSTRAINT "PK_9c33046e851961c6f9a131aeb63"`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD CONSTRAINT "PK_0e1fe86a5451cb49891062f83ec" PRIMARY KEY ("networkInfoId", "networkCardInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD "inferenceDeviceInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD CONSTRAINT "PK_b822f14e8c5d226905e0a1373ec" PRIMARY KEY ("inferenceDeviceInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD "inferenceAcceleratorInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" DROP CONSTRAINT "PK_b822f14e8c5d226905e0a1373ec"`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD CONSTRAINT "PK_e19819ea40480a5492da8f87f4f" PRIMARY KEY ("inferenceAcceleratorInfoId", "inferenceDeviceInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD "gpuDeviceInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD CONSTRAINT "PK_7b8582e2b009b8c08e972e95255" PRIMARY KEY ("gpuDeviceInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD "gpuInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" DROP CONSTRAINT "PK_7b8582e2b009b8c08e972e95255"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD CONSTRAINT "PK_a23133f581833ea97180c0ed4e9" PRIMARY KEY ("gpuInfoId", "gpuDeviceInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD "fpgaDeviceInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD CONSTRAINT "PK_f1a740c375af691f8fd47908cf1" PRIMARY KEY ("fpgaDeviceInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD "fpgaInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" DROP CONSTRAINT "PK_f1a740c375af691f8fd47908cf1"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD CONSTRAINT "PK_9ac3610d2862b2d49a97c550ad9" PRIMARY KEY ("fpgaInfoId", "fpgaDeviceInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD "diskInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD CONSTRAINT "PK_f26504b23aa1d0966aedaefa802" PRIMARY KEY ("diskInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD "instanceStorageInfoId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" DROP CONSTRAINT "PK_f26504b23aa1d0966aedaefa802"`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD CONSTRAINT "PK_c6192c7134ac83bca4a6252347e" PRIMARY KEY ("instanceStorageInfoId", "diskInfoId")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD "tagId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD CONSTRAINT "PK_51558a61311eebe1a4e25eb230f" PRIMARY KEY ("tagId")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD "amiId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" DROP CONSTRAINT "PK_51558a61311eebe1a4e25eb230f"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD CONSTRAINT "PK_583e55e561937fdfee14c4f5e3f" PRIMARY KEY ("amiId", "tagId")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD "ebsBlockDeviceMappingId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD CONSTRAINT "PK_9becf576d9da01547c5ed95f5f9" PRIMARY KEY ("ebsBlockDeviceMappingId")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD "amiId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" DROP CONSTRAINT "PK_9becf576d9da01547c5ed95f5f9"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD CONSTRAINT "PK_04b3f6068ea22925c8185799c6e" PRIMARY KEY ("amiId", "ebsBlockDeviceMappingId")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD "productCodeId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD CONSTRAINT "PK_51cbdd2c81bd2ab1a3b5fdab511" PRIMARY KEY ("productCodeId")`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD "amiId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" DROP CONSTRAINT "PK_51cbdd2c81bd2ab1a3b5fdab511"`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD CONSTRAINT "PK_7ac1bd18001abba04d94cde3c40" PRIMARY KEY ("amiId", "productCodeId")`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" ADD "networkBorderGroup" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" ADD "groupName" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" ADD "zoneName" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" ADD "zoneId" integer NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."availability_zone_optinstatus_enum" AS ENUM('not-opted-in', 'opt-in-not-required', 'opted-in')`);
        await queryRunner.query(`ALTER TABLE "public"."availability_zone" ADD "optInStatus" "public"."availability_zone_optinstatus_enum" NOT NULL DEFAULT 'opt-in-not-required'`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "autoRecoverySupported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "dedicatedHostsSupported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "burstablePerformanceSupported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "hibernationSupported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "instanceStorageSupported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "memorySizeInMiB" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "bareMetal" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "freeTierEligible" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "currentGeneration" boolean NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."instance_type_instancetype_enum" AS ENUM('a1.2xlarge', 'a1.4xlarge', 'a1.large', 'a1.medium', 'a1.metal', 'a1.xlarge', 'c1.medium', 'c1.xlarge', 'c3.2xlarge', 'c3.4xlarge', 'c3.8xlarge', 'c3.large', 'c3.xlarge', 'c4.2xlarge', 'c4.4xlarge', 'c4.8xlarge', 'c4.large', 'c4.xlarge', 'c5.12xlarge', 'c5.18xlarge', 'c5.24xlarge', 'c5.2xlarge', 'c5.4xlarge', 'c5.9xlarge', 'c5.large', 'c5.metal', 'c5.xlarge', 'c5a.12xlarge', 'c5a.16xlarge', 'c5a.24xlarge', 'c5a.2xlarge', 'c5a.4xlarge', 'c5a.8xlarge', 'c5a.large', 'c5a.xlarge', 'c5ad.12xlarge', 'c5ad.16xlarge', 'c5ad.24xlarge', 'c5ad.2xlarge', 'c5ad.4xlarge', 'c5ad.8xlarge', 'c5ad.large', 'c5ad.xlarge', 'c5d.12xlarge', 'c5d.18xlarge', 'c5d.24xlarge', 'c5d.2xlarge', 'c5d.4xlarge', 'c5d.9xlarge', 'c5d.large', 'c5d.metal', 'c5d.xlarge', 'c5n.18xlarge', 'c5n.2xlarge', 'c5n.4xlarge', 'c5n.9xlarge', 'c5n.large', 'c5n.metal', 'c5n.xlarge', 'c6g.12xlarge', 'c6g.16xlarge', 'c6g.2xlarge', 'c6g.4xlarge', 'c6g.8xlarge', 'c6g.large', 'c6g.medium', 'c6g.metal', 'c6g.xlarge', 'c6gd.12xlarge', 'c6gd.16xlarge', 'c6gd.2xlarge', 'c6gd.4xlarge', 'c6gd.8xlarge', 'c6gd.large', 'c6gd.medium', 'c6gd.metal', 'c6gd.xlarge', 'c6gn.12xlarge', 'c6gn.16xlarge', 'c6gn.2xlarge', 'c6gn.4xlarge', 'c6gn.8xlarge', 'c6gn.large', 'c6gn.medium', 'c6gn.xlarge', 'cc1.4xlarge', 'cc2.8xlarge', 'cg1.4xlarge', 'cr1.8xlarge', 'd2.2xlarge', 'd2.4xlarge', 'd2.8xlarge', 'd2.xlarge', 'd3.2xlarge', 'd3.4xlarge', 'd3.8xlarge', 'd3.xlarge', 'd3en.12xlarge', 'd3en.2xlarge', 'd3en.4xlarge', 'd3en.6xlarge', 'd3en.8xlarge', 'd3en.xlarge', 'f1.16xlarge', 'f1.2xlarge', 'f1.4xlarge', 'g2.2xlarge', 'g2.8xlarge', 'g3.16xlarge', 'g3.4xlarge', 'g3.8xlarge', 'g3s.xlarge', 'g4ad.16xlarge', 'g4ad.2xlarge', 'g4ad.4xlarge', 'g4ad.8xlarge', 'g4ad.xlarge', 'g4dn.12xlarge', 'g4dn.16xlarge', 'g4dn.2xlarge', 'g4dn.4xlarge', 'g4dn.8xlarge', 'g4dn.metal', 'g4dn.xlarge', 'h1.16xlarge', 'h1.2xlarge', 'h1.4xlarge', 'h1.8xlarge', 'hi1.4xlarge', 'hs1.8xlarge', 'i2.2xlarge', 'i2.4xlarge', 'i2.8xlarge', 'i2.xlarge', 'i3.16xlarge', 'i3.2xlarge', 'i3.4xlarge', 'i3.8xlarge', 'i3.large', 'i3.metal', 'i3.xlarge', 'i3en.12xlarge', 'i3en.24xlarge', 'i3en.2xlarge', 'i3en.3xlarge', 'i3en.6xlarge', 'i3en.large', 'i3en.metal', 'i3en.xlarge', 'inf1.24xlarge', 'inf1.2xlarge', 'inf1.6xlarge', 'inf1.xlarge', 'm1.large', 'm1.medium', 'm1.small', 'm1.xlarge', 'm2.2xlarge', 'm2.4xlarge', 'm2.xlarge', 'm3.2xlarge', 'm3.large', 'm3.medium', 'm3.xlarge', 'm4.10xlarge', 'm4.16xlarge', 'm4.2xlarge', 'm4.4xlarge', 'm4.large', 'm4.xlarge', 'm5.12xlarge', 'm5.16xlarge', 'm5.24xlarge', 'm5.2xlarge', 'm5.4xlarge', 'm5.8xlarge', 'm5.large', 'm5.metal', 'm5.xlarge', 'm5a.12xlarge', 'm5a.16xlarge', 'm5a.24xlarge', 'm5a.2xlarge', 'm5a.4xlarge', 'm5a.8xlarge', 'm5a.large', 'm5a.xlarge', 'm5ad.12xlarge', 'm5ad.16xlarge', 'm5ad.24xlarge', 'm5ad.2xlarge', 'm5ad.4xlarge', 'm5ad.8xlarge', 'm5ad.large', 'm5ad.xlarge', 'm5d.12xlarge', 'm5d.16xlarge', 'm5d.24xlarge', 'm5d.2xlarge', 'm5d.4xlarge', 'm5d.8xlarge', 'm5d.large', 'm5d.metal', 'm5d.xlarge', 'm5dn.12xlarge', 'm5dn.16xlarge', 'm5dn.24xlarge', 'm5dn.2xlarge', 'm5dn.4xlarge', 'm5dn.8xlarge', 'm5dn.large', 'm5dn.metal', 'm5dn.xlarge', 'm5n.12xlarge', 'm5n.16xlarge', 'm5n.24xlarge', 'm5n.2xlarge', 'm5n.4xlarge', 'm5n.8xlarge', 'm5n.large', 'm5n.metal', 'm5n.xlarge', 'm5zn.12xlarge', 'm5zn.2xlarge', 'm5zn.3xlarge', 'm5zn.6xlarge', 'm5zn.large', 'm5zn.metal', 'm5zn.xlarge', 'm6g.12xlarge', 'm6g.16xlarge', 'm6g.2xlarge', 'm6g.4xlarge', 'm6g.8xlarge', 'm6g.large', 'm6g.medium', 'm6g.metal', 'm6g.xlarge', 'm6gd.12xlarge', 'm6gd.16xlarge', 'm6gd.2xlarge', 'm6gd.4xlarge', 'm6gd.8xlarge', 'm6gd.large', 'm6gd.medium', 'm6gd.metal', 'm6gd.xlarge', 'm6i.12xlarge', 'm6i.16xlarge', 'm6i.24xlarge', 'm6i.2xlarge', 'm6i.32xlarge', 'm6i.4xlarge', 'm6i.8xlarge', 'm6i.large', 'm6i.xlarge', 'mac1.metal', 'p2.16xlarge', 'p2.8xlarge', 'p2.xlarge', 'p3.16xlarge', 'p3.2xlarge', 'p3.8xlarge', 'p3dn.24xlarge', 'p4d.24xlarge', 'r3.2xlarge', 'r3.4xlarge', 'r3.8xlarge', 'r3.large', 'r3.xlarge', 'r4.16xlarge', 'r4.2xlarge', 'r4.4xlarge', 'r4.8xlarge', 'r4.large', 'r4.xlarge', 'r5.12xlarge', 'r5.16xlarge', 'r5.24xlarge', 'r5.2xlarge', 'r5.4xlarge', 'r5.8xlarge', 'r5.large', 'r5.metal', 'r5.xlarge', 'r5a.12xlarge', 'r5a.16xlarge', 'r5a.24xlarge', 'r5a.2xlarge', 'r5a.4xlarge', 'r5a.8xlarge', 'r5a.large', 'r5a.xlarge', 'r5ad.12xlarge', 'r5ad.16xlarge', 'r5ad.24xlarge', 'r5ad.2xlarge', 'r5ad.4xlarge', 'r5ad.8xlarge', 'r5ad.large', 'r5ad.xlarge', 'r5b.12xlarge', 'r5b.16xlarge', 'r5b.24xlarge', 'r5b.2xlarge', 'r5b.4xlarge', 'r5b.8xlarge', 'r5b.large', 'r5b.metal', 'r5b.xlarge', 'r5d.12xlarge', 'r5d.16xlarge', 'r5d.24xlarge', 'r5d.2xlarge', 'r5d.4xlarge', 'r5d.8xlarge', 'r5d.large', 'r5d.metal', 'r5d.xlarge', 'r5dn.12xlarge', 'r5dn.16xlarge', 'r5dn.24xlarge', 'r5dn.2xlarge', 'r5dn.4xlarge', 'r5dn.8xlarge', 'r5dn.large', 'r5dn.metal', 'r5dn.xlarge', 'r5n.12xlarge', 'r5n.16xlarge', 'r5n.24xlarge', 'r5n.2xlarge', 'r5n.4xlarge', 'r5n.8xlarge', 'r5n.large', 'r5n.metal', 'r5n.xlarge', 'r6g.12xlarge', 'r6g.16xlarge', 'r6g.2xlarge', 'r6g.4xlarge', 'r6g.8xlarge', 'r6g.large', 'r6g.medium', 'r6g.metal', 'r6g.xlarge', 'r6gd.12xlarge', 'r6gd.16xlarge', 'r6gd.2xlarge', 'r6gd.4xlarge', 'r6gd.8xlarge', 'r6gd.large', 'r6gd.medium', 'r6gd.metal', 'r6gd.xlarge', 't1.micro', 't2.2xlarge', 't2.large', 't2.medium', 't2.micro', 't2.nano', 't2.small', 't2.xlarge', 't3.2xlarge', 't3.large', 't3.medium', 't3.micro', 't3.nano', 't3.small', 't3.xlarge', 't3a.2xlarge', 't3a.large', 't3a.medium', 't3a.micro', 't3a.nano', 't3a.small', 't3a.xlarge', 't4g.2xlarge', 't4g.large', 't4g.medium', 't4g.micro', 't4g.nano', 't4g.small', 't4g.xlarge', 'u-12tb1.112xlarge', 'u-12tb1.metal', 'u-18tb1.metal', 'u-24tb1.metal', 'u-6tb1.112xlarge', 'u-6tb1.56xlarge', 'u-6tb1.metal', 'u-9tb1.112xlarge', 'u-9tb1.metal', 'x1.16xlarge', 'x1.32xlarge', 'x1e.16xlarge', 'x1e.2xlarge', 'x1e.32xlarge', 'x1e.4xlarge', 'x1e.8xlarge', 'x1e.xlarge', 'x2gd.12xlarge', 'x2gd.16xlarge', 'x2gd.2xlarge', 'x2gd.4xlarge', 'x2gd.8xlarge', 'x2gd.large', 'x2gd.medium', 'x2gd.metal', 'x2gd.xlarge', 'z1d.12xlarge', 'z1d.2xlarge', 'z1d.3xlarge', 'z1d.6xlarge', 'z1d.large', 'z1d.metal', 'z1d.xlarge')`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type" ADD "instanceType" "public"."instance_type_instancetype_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" ADD "defaultThreadsPerCore" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" ADD "defaultCores" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info" ADD "defaultVCPUs" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."region" ADD "optInStatus" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "networkPerformance" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "encryptionInTransitSupported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "efaSupported" boolean NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."network_info_enasupport_enum" AS ENUM('required', 'supported', 'unsupported')`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "enaSupport" "public"."network_info_enasupport_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "ipv6Supported" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "ipv6AddressesPerInterface" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "ipv4AddressesPerInterface" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "defaultNetworkCardIndex" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "maximumNetworkCards" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_info" ADD "maximumNetworkInterfaces" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" ADD "networkPerformance" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" ADD "maximumNetworkInterfaces" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."network_card_info" ADD "networkCardIndex" integer NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ebs_info_nvmesupport_enum" AS ENUM('required', 'supported', 'unsupported')`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" ADD "NVMESupport" "public"."ebs_info_nvmesupport_enum" NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ebs_info_encryptionsupport_enum" AS ENUM('supported', 'unsupported')`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" ADD "encryptionSupport" "public"."ebs_info_encryptionsupport_enum" NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ebs_info_ebsoptimizedsupport_enum" AS ENUM('default', 'supported', 'unsupported')`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_info" ADD "ebsOptimizedSupport" "public"."ebs_info_ebsoptimizedsupport_enum" NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."instance_storage_info_nvmesupport_enum" AS ENUM('required', 'supported', 'unsupported')`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info" ADD "NVMESupport" "public"."instance_storage_info_nvmesupport_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info" ADD "totalSizeInGB" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "maximumIOPS" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "maximumThroughputInMBps" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "maximumBandwidthInMbps" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "baselineIOPS" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "baselineThroughputInMBps" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_optimized_info" ADD "baselineBandwidthInMbps" numeric NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "ramdiskId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "usageOperation" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "platformDetails" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "ownerId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "kernelId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "imageLocation" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "imageId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "sirovNetSupport" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "rootDeviceName" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "imageOwnerAlias" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "deprecationTime" TIMESTAMP WITH TIME ZONE NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ami_rootdevicetype_enum" AS ENUM('ebs', 'instance-store')`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "rootDeviceType" "public"."ami_rootdevicetype_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "enaSupport" boolean NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ami_imagetype_enum" AS ENUM('kernel', 'machine', 'ramdisk')`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "imageType" "public"."ami_imagetype_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ami" ADD "creationDate" TIMESTAMP WITH TIME ZONE NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" ADD "noDevice" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" ADD "virtualName" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_mapping" ADD "deviceName" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "outpostArn" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "kmsKeyId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "snapshotId" character varying NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."ebs_block_device_type_volumetype_enum" AS ENUM('gp2', 'gp3', 'io1', 'io2', 'sc1', 'st1', 'standard')`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "volumeType" "public"."ebs_block_device_type_volumetype_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "volumeSize" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."ebs_block_device_type" ADD "deleteOnTermination" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "public"."virtualization_type" RENAME CONSTRAINT "UQ_0d05e6087e782c5a437b40d8d2b" TO "UQ_181f2e7a0b47a335442cc945df2"`);
        await queryRunner.query(`ALTER TABLE "public"."virtualization_type" RENAME COLUMN "virtualization_type" TO "virtualizationType"`);
        await queryRunner.query(`ALTER TABLE "public"."usage_class" RENAME CONSTRAINT "UQ_330c813861b91da5119a46f4727" TO "UQ_6c0d453f3dda037c94190ff4ef6"`);
        await queryRunner.query(`ALTER TABLE "public"."usage_class" RENAME COLUMN "usage_class" TO "usageClass"`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info" RENAME COLUMN "sustained_clock_speed_in_g_hz" TO "sustainedClockSpeedInGHz"`);
        await queryRunner.query(`ALTER TABLE "public"."efa_info" RENAME COLUMN "maximum_efa_interfaces" TO "maximumEFAInterfaces"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info" RENAME COLUMN "total_gpu_memory_in_mi_b" TO "totalGPUMemoryInMiB"`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_device_memory_info" RENAME COLUMN "size_in_mi_b" TO "sizeInMiB"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info" RENAME COLUMN "total_fpga_memory_in_mi_b" TO "totalFPGAMemoryInMiB"`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_device_memory_info" RENAME COLUMN "size_in_mi_b" TO "sizeInMiB"`);
        await queryRunner.query(`ALTER TABLE "public"."disk_info" RENAME COLUMN "size_in_gb" TO "sizeInGB"`);
        await queryRunner.query(`ALTER TABLE "public"."device_type" RENAME CONSTRAINT "UQ_c49ce8ef8706f45c5650b2ed6ba" TO "UQ_e7709b043396305fcfb252a1972"`);
        await queryRunner.query(`ALTER TABLE "public"."device_type" RENAME COLUMN "device_type" TO "deviceType"`);
        await queryRunner.query(`ALTER TABLE "public"."cpu_architecture" RENAME CONSTRAINT "UQ_7a43b53cf9f82afd0f7a426fed9" TO "UQ_4bc685244b74099f073c42ad735"`);
        await queryRunner.query(`ALTER TABLE "public"."cpu_architecture" RENAME COLUMN "cpu_architecture" TO "cpuArchitecture"`);
        await queryRunner.query(`CREATE INDEX "IDX_e8b593dfecd89b40b47bcb9e92" ON "public"."instance_type_availability_zones_availability_zone" ("availabilityZoneId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ddceea37cc8e3a55c25cd183f1" ON "public"."instance_type_availability_zones_availability_zone" ("instanceTypeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_9f19bef18ebbdb2ddef5bc4fc9" ON "public"."instance_type_regions_region" ("regionId") `);
        await queryRunner.query(`CREATE INDEX "IDX_e147c1d39dd8092fc3052a3454" ON "public"."instance_type_regions_region" ("instanceTypeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_d5e1e0258e6532899c373cf727" ON "public"."instance_type_supported_boot_modes_boot_mode" ("bootModeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_63d531a5057bf5bf18cac8a2f2" ON "public"."instance_type_supported_boot_modes_boot_mode" ("instanceTypeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_f7db3c32e781541f328f0502fa" ON "public"."ins_typ_sup_vir_typ_vir_typ" ("virtualizationTypeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_3882f8bb56e24d9ed43d1c4c24" ON "public"."ins_typ_sup_vir_typ_vir_typ" ("instanceTypeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_bd4dfa196aae7012c698788789" ON "public"."instance_type_supported_root_device_types_device_type" ("deviceTypeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_912b11c90cb1561261c71cd5dc" ON "public"."instance_type_supported_root_device_types_device_type" ("instanceTypeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_1dad445b95c880dc668fd01ceb" ON "public"."instance_type_supported_usage_classes_usage_class" ("usageClassId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ee864286f0efb1f01030c9dc75" ON "public"."instance_type_supported_usage_classes_usage_class" ("instanceTypeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ac3a3f74934b0e90a077d2ab5d" ON "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ("validThreadsPerCoreId") `);
        await queryRunner.query(`CREATE INDEX "IDX_19bde7851ddb55c88d9f83e6b5" ON "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ("vcpuInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_6bfcecb8b3e69646c70f259cc7" ON "public"."vcpu_info_valid_cores_valid_core" ("validCoreId") `);
        await queryRunner.query(`CREATE INDEX "IDX_7627cd35b944da31aa7b70f647" ON "public"."vcpu_info_valid_cores_valid_core" ("vcpuInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_528f6ad79fa40bed258063306f" ON "public"."processor_info_supported_architectures_cpu_architecture" ("cpuArchitectureId") `);
        await queryRunner.query(`CREATE INDEX "IDX_61c1342b3f5ea1eed2a925918b" ON "public"."processor_info_supported_architectures_cpu_architecture" ("processorInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_a9706401551c7ca9fa91d3f47b" ON "public"."pla_gro_inf_sup_str_pla_gro_str" ("placementGroupStrategyId") `);
        await queryRunner.query(`CREATE INDEX "IDX_df2384ed345ea02b4605528778" ON "public"."pla_gro_inf_sup_str_pla_gro_str" ("placementGroupInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_9c33046e851961c6f9a131aeb6" ON "public"."network_info_network_cards_network_card_info" ("networkCardInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_38e3395028d80a8e5a422287db" ON "public"."network_info_network_cards_network_card_info" ("networkInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_b822f14e8c5d226905e0a1373e" ON "public"."inference_accelerator_info_accelerators_inference_device_info" ("inferenceDeviceInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_a01d9a1f69047f90898bbc7548" ON "public"."inference_accelerator_info_accelerators_inference_device_info" ("inferenceAcceleratorInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_7b8582e2b009b8c08e972e9525" ON "public"."gpu_info_gpus_gpu_device_info" ("gpuDeviceInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_71b952e068cb2458c680b0ea73" ON "public"."gpu_info_gpus_gpu_device_info" ("gpuInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_f1a740c375af691f8fd47908cf" ON "public"."fpga_info_fpgas_fpga_device_info" ("fpgaDeviceInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_efc682159731f5f8bd2b776ab6" ON "public"."fpga_info_fpgas_fpga_device_info" ("fpgaInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_f26504b23aa1d0966aedaefa80" ON "public"."instance_storage_info_disks_disk_info" ("diskInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_2b12a15c05cc37e279554f5ce7" ON "public"."instance_storage_info_disks_disk_info" ("instanceStorageInfoId") `);
        await queryRunner.query(`CREATE INDEX "IDX_51558a61311eebe1a4e25eb230" ON "public"."ami_tags_tag" ("tagId") `);
        await queryRunner.query(`CREATE INDEX "IDX_4b92e6487f752a1a55b6184643" ON "public"."ami_tags_tag" ("amiId") `);
        await queryRunner.query(`CREATE INDEX "IDX_9becf576d9da01547c5ed95f5f" ON "public"."ami_block_device_mappings_ebs_block_device_mapping" ("ebsBlockDeviceMappingId") `);
        await queryRunner.query(`CREATE INDEX "IDX_b39944b2aae318467ceb02ec1b" ON "public"."ami_block_device_mappings_ebs_block_device_mapping" ("amiId") `);
        await queryRunner.query(`CREATE INDEX "IDX_51cbdd2c81bd2ab1a3b5fdab51" ON "public"."ami_product_codes_product_code" ("productCodeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_5f2a13e51f628eda360ec314cb" ON "public"."ami_product_codes_product_code" ("amiId") `);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD CONSTRAINT "FK_ddceea37cc8e3a55c25cd183f1c" FOREIGN KEY ("instanceTypeId") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_availability_zones_availability_zone" ADD CONSTRAINT "FK_e8b593dfecd89b40b47bcb9e92c" FOREIGN KEY ("availabilityZoneId") REFERENCES "availability_zone"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD CONSTRAINT "FK_e147c1d39dd8092fc3052a3454c" FOREIGN KEY ("instanceTypeId") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_regions_region" ADD CONSTRAINT "FK_9f19bef18ebbdb2ddef5bc4fc9c" FOREIGN KEY ("regionId") REFERENCES "region"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD CONSTRAINT "FK_d5e1e0258e6532899c373cf7276" FOREIGN KEY ("bootModeId") REFERENCES "boot_mode"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_boot_modes_boot_mode" ADD CONSTRAINT "FK_63d531a5057bf5bf18cac8a2f28" FOREIGN KEY ("instanceTypeId") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD CONSTRAINT "FK_f7db3c32e781541f328f0502fa6" FOREIGN KEY ("virtualizationTypeId") REFERENCES "virtualization_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ins_typ_sup_vir_typ_vir_typ" ADD CONSTRAINT "FK_3882f8bb56e24d9ed43d1c4c249" FOREIGN KEY ("instanceTypeId") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD CONSTRAINT "FK_bd4dfa196aae7012c6987887899" FOREIGN KEY ("deviceTypeId") REFERENCES "device_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_root_device_types_device_type" ADD CONSTRAINT "FK_912b11c90cb1561261c71cd5dc5" FOREIGN KEY ("instanceTypeId") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD CONSTRAINT "FK_1dad445b95c880dc668fd01ceb3" FOREIGN KEY ("usageClassId") REFERENCES "usage_class"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_type_supported_usage_classes_usage_class" ADD CONSTRAINT "FK_ee864286f0efb1f01030c9dc757" FOREIGN KEY ("instanceTypeId") REFERENCES "instance_type"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD CONSTRAINT "FK_ac3a3f74934b0e90a077d2ab5d3" FOREIGN KEY ("validThreadsPerCoreId") REFERENCES "valid_threads_per_core"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_threads_per_core_valid_threads_per_core" ADD CONSTRAINT "FK_19bde7851ddb55c88d9f83e6b5e" FOREIGN KEY ("vcpuInfoId") REFERENCES "vcpu_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD CONSTRAINT "FK_6bfcecb8b3e69646c70f259cc71" FOREIGN KEY ("validCoreId") REFERENCES "valid_core"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."vcpu_info_valid_cores_valid_core" ADD CONSTRAINT "FK_7627cd35b944da31aa7b70f6473" FOREIGN KEY ("vcpuInfoId") REFERENCES "vcpu_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD CONSTRAINT "FK_528f6ad79fa40bed258063306f1" FOREIGN KEY ("cpuArchitectureId") REFERENCES "cpu_architecture"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."processor_info_supported_architectures_cpu_architecture" ADD CONSTRAINT "FK_61c1342b3f5ea1eed2a925918ba" FOREIGN KEY ("processorInfoId") REFERENCES "processor_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD CONSTRAINT "FK_a9706401551c7ca9fa91d3f47b0" FOREIGN KEY ("placementGroupStrategyId") REFERENCES "placement_group_strategy"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."pla_gro_inf_sup_str_pla_gro_str" ADD CONSTRAINT "FK_df2384ed345ea02b46055287780" FOREIGN KEY ("placementGroupInfoId") REFERENCES "placement_group_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD CONSTRAINT "FK_9c33046e851961c6f9a131aeb63" FOREIGN KEY ("networkCardInfoId") REFERENCES "network_card_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."network_info_network_cards_network_card_info" ADD CONSTRAINT "FK_38e3395028d80a8e5a422287dbe" FOREIGN KEY ("networkInfoId") REFERENCES "network_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD CONSTRAINT "FK_b822f14e8c5d226905e0a1373ec" FOREIGN KEY ("inferenceDeviceInfoId") REFERENCES "inference_device_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."inference_accelerator_info_accelerators_inference_device_info" ADD CONSTRAINT "FK_a01d9a1f69047f90898bbc75487" FOREIGN KEY ("inferenceAcceleratorInfoId") REFERENCES "inference_accelerator_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD CONSTRAINT "FK_71b952e068cb2458c680b0ea73a" FOREIGN KEY ("gpuInfoId") REFERENCES "gpu_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."gpu_info_gpus_gpu_device_info" ADD CONSTRAINT "FK_7b8582e2b009b8c08e972e95255" FOREIGN KEY ("gpuDeviceInfoId") REFERENCES "gpu_device_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD CONSTRAINT "FK_efc682159731f5f8bd2b776ab63" FOREIGN KEY ("fpgaInfoId") REFERENCES "fpga_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."fpga_info_fpgas_fpga_device_info" ADD CONSTRAINT "FK_f1a740c375af691f8fd47908cf1" FOREIGN KEY ("fpgaDeviceInfoId") REFERENCES "fpga_device_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD CONSTRAINT "FK_f26504b23aa1d0966aedaefa802" FOREIGN KEY ("diskInfoId") REFERENCES "disk_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."instance_storage_info_disks_disk_info" ADD CONSTRAINT "FK_2b12a15c05cc37e279554f5ce7c" FOREIGN KEY ("instanceStorageInfoId") REFERENCES "instance_storage_info"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD CONSTRAINT "FK_51558a61311eebe1a4e25eb230f" FOREIGN KEY ("tagId") REFERENCES "tag"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_tags_tag" ADD CONSTRAINT "FK_4b92e6487f752a1a55b6184643c" FOREIGN KEY ("amiId") REFERENCES "ami"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD CONSTRAINT "FK_b39944b2aae318467ceb02ec1b2" FOREIGN KEY ("amiId") REFERENCES "ami"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_block_device_mappings_ebs_block_device_mapping" ADD CONSTRAINT "FK_9becf576d9da01547c5ed95f5f9" FOREIGN KEY ("ebsBlockDeviceMappingId") REFERENCES "ebs_block_device_mapping"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD CONSTRAINT "FK_51cbdd2c81bd2ab1a3b5fdab511" FOREIGN KEY ("productCodeId") REFERENCES "product_code"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "public"."ami_product_codes_product_code" ADD CONSTRAINT "FK_5f2a13e51f628eda360ec314cb1" FOREIGN KEY ("amiId") REFERENCES "ami"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

}
